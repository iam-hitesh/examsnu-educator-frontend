{"ast":null,"code":"import _classCallCheck from \"/Users/Jarvis/Desktop/projects/examsnu/educator/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Jarvis/Desktop/projects/examsnu/educator/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Jarvis/Desktop/projects/examsnu/educator/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Jarvis/Desktop/projects/examsnu/educator/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Jarvis/Desktop/projects/examsnu/educator/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Jarvis/Desktop/projects/examsnu/educator/src/components/Collection/Questions/addQuestion.jsx\";\nimport React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { BASE_URL } from '../../../services/BaseUrl';\nimport Footer from '../../../layouts/Footer';\nimport Sidebar from '../../../layouts/Sidebar';\nimport Navbar from '../../../layouts/Navbar';\nimport { Link } from 'react-router-dom';\nimport Loader from '../../../assets/img/loading.gif';\nimport { cutString } from '../../../services/cutString';\nimport Moment from 'moment';\n\nvar addQuestion =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(addQuestion, _Component);\n\n  function addQuestion(props) {\n    var _this;\n\n    _classCallCheck(this, addQuestion);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(addQuestion).call(this, props));\n    _this.state = {\n      isAuthenticated: !!sessionStorage.getItem('examsnuDashToken'),\n      profile: JSON.parse(sessionStorage.getItem('examsnuDashProfile')),\n      isLoading: true,\n      error: false,\n      message: '',\n      all_subjects: [{\n        id: 0,\n        subject_name: \" \",\n        alternative_name: \" \",\n        description: \" \",\n        is_deleted: false\n      }],\n      all_topics: [{\n        id: 0,\n        topic_title: \"\",\n        is_deleted: false\n      }]\n    };\n    return _this;\n  }\n\n  _createClass(addQuestion, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      document.title = \"Add New Question - examsnu.in\";\n\n      if (this.state.isAuthenticated) {\n        fetch(\"\".concat(BASE_URL, \"subjects/\"), {\n          method: \"GET\",\n          headers: {\n            Authorization: \"Token \".concat(sessionStorage.getItem('examsnuDashToken'))\n          }\n        }).then(function (response) {\n          if (!response.ok) {\n            throw new Error(response.status);\n          } else {\n            return response.json();\n          }\n        }).then(function (subjectJson) {\n          // This is for Calling all available topics\n          fetch(\"\".concat(BASE_URL, \"topics/\"), {\n            method: \"GET\",\n            headers: {\n              Authorization: \"Token \".concat(sessionStorage.getItem('examsnuDashToken'))\n            }\n          }).then(function (response) {\n            if (!response.ok) {\n              throw new Error(response.status);\n            } else {\n              return response.json();\n            }\n          }).then(function (topicsJson) {\n            _this2.setState({\n              all_subjects: subjectJson,\n              all_topics: topicsJson,\n              isLoading: false\n            });\n          }).catch(function (error) {\n            _this2.setState({\n              error: true,\n              isLoading: false,\n              message: 'Some Error Occurred'\n            });\n          });\n        }).catch(function (error) {\n          _this2.setState({\n            error: true,\n            isLoading: false,\n            message: 'Some Error Occurred'\n          });\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      if (!this.state.isAuthenticated) {\n        return React.createElement(Redirect, {\n          to: \"/login\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(Sidebar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"main-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(Navbar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"header bg-gradient-primary pb-8 pt-5 pt-md-8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container-fluid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"header-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        className: \"headline\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, \"Add New Question\")), React.createElement(Link, {\n        to: \"/collection/questions\",\n        className: \"btn btn-info btn-lg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, \"Check Question Collection\"))), React.createElement(\"div\", {\n        className: \"container-fluid mt--7\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row mt-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card shadow\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card-header bg-transparent\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        className: \"mb-0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, \"Add New Question\")), React.createElement(\"div\", {\n        className: \"margin\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, this.state.message && this.state.error ? React.createElement(\"div\", {\n        className: \"alert alert-danger\",\n        role: \"alert\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, this.state.message) : this.state.message && !this.state.error ? React.createElement(\"div\", {\n        className: \"alert alert-info\",\n        role: \"alert\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, this.state.message) : ''), React.createElement(\"div\", {\n        className: \"loader-justify\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: Loader,\n        className: !this.state.isLoading ? \"hideBox\" : \"loader\",\n        alt: \"Loader\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: this.state.isLoading ? \"card-body hideBox\" : \"card-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row icon-examples\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-lg-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: function onSubmit(event) {\n          return _this3.addNewQuestion(event);\n        },\n        ref: \"form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-group col-lg-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, \"Write Question Here(In English)(If Have any image then insert with img tag).\"), React.createElement(\"textarea\", {\n        type: \"text\",\n        required: true,\n        className: \"form-control form-control-alternative\",\n        id: \"question\",\n        name: \"question\",\n        value: this.state.question.question,\n        onChange: function onChange(e) {\n          return _this3.onChange(e);\n        },\n        placeholder: \"Question in English\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group col-lg-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, \"Write Question Here(In Hindi)(If Have any image then insert with img tag).\"), React.createElement(\"textarea\", {\n        type: \"text\",\n        required: true,\n        className: \"form-control form-control-alternative\",\n        id: \"question\",\n        name: \"question\",\n        value: this.state.question.hindi_question,\n        onChange: function onChange(e) {\n          return _this3.onChange(e);\n        },\n        placeholder: \"Question in Hindi\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group col-lg-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, \"Write Question's Solution Here(In English)(If Have any image then insert with img tag).\"), React.createElement(\"textarea\", {\n        type: \"text\",\n        required: true,\n        className: \"form-control form-control-alternative\",\n        id: \"solution\",\n        name: \"solution\",\n        value: this.state.question.solution,\n        onChange: function onChange(e) {\n          return _this3.onChange(e);\n        },\n        placeholder: \"Question's Solution in English\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group col-lg-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }, \"Write Question's Solution Here(In Hindi)(If Have any image then insert with img tag).\"), React.createElement(\"textarea\", {\n        type: \"text\",\n        required: true,\n        className: \"form-control form-control-alternative\",\n        id: \"hindi_solution\",\n        name: \"hindi_solution\",\n        value: this.state.question.hindi_solution,\n        onChange: function onChange(e) {\n          return _this3.onChange(e);\n        },\n        placeholder: \"Question's Solution in Hindi\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group col-lg-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      }, \"Question Type\"), React.createElement(\"select\", {\n        className: \"form-control form-control-alternative\",\n        name: \"question_type\",\n        onChange: function onChange(e) {\n          return _this3.onChange(e);\n        },\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }, \"Single Correct\"), React.createElement(\"option\", {\n        value: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }, \"Multiple Correct\"), React.createElement(\"option\", {\n        value: \"3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }, \"Integer Type\"), React.createElement(\"option\", {\n        value: \"4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      }, \"Fill in the Blanks\"), React.createElement(\"option\", {\n        value: \"5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }, \"True/False\"))), React.createElement(\"div\", {\n        className: \"form-group col-lg-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      }, \"Marks for Correct Answer\"), React.createElement(\"input\", {\n        type: \"number\",\n        step: \"0.01\",\n        required: true,\n        className: \"form-control form-control-alternative\",\n        id: \"correct_marks\",\n        name: \"correct_marks\",\n        value: this.state.question.correct_marks,\n        onChange: function onChange(e) {\n          return _this3.onChange(e);\n        },\n        placeholder: \"Marks for Correct Answer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group col-lg-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235\n        },\n        __self: this\n      }, \"Negative Marks for Incorrect Answer\"), React.createElement(\"input\", {\n        type: \"number\",\n        step: \"0.01\",\n        required: true,\n        className: \"form-control form-control-alternative\",\n        id: \"negative_marks\",\n        name: \"negative_marks\",\n        value: this.state.question.negative_marks,\n        onChange: function onChange(e) {\n          return _this3.onChange(e);\n        },\n        placeholder: \"Negative Marks for Incorrect Answer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group col-lg-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249\n        },\n        __self: this\n      }, \"Is Negative Marking?\"), React.createElement(\"select\", {\n        className: \"form-control form-control-alternative\",\n        name: \"question_type\",\n        onChange: function onChange(e) {\n          return _this3.onChange(e);\n        },\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"true\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251\n        },\n        __self: this\n      }, \"Yes\"), React.createElement(\"option\", {\n        value: \"false\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252\n        },\n        __self: this\n      }, \"No\"))), React.createElement(\"div\", {\n        className: \"form-group col-lg-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257\n        },\n        __self: this\n      }, \"Video Alternative Title\"), React.createElement(\"input\", {\n        type: \"text\",\n        required: true,\n        className: \"form-control form-control-alternative\",\n        id: \"video_alt_title\",\n        name: \"video_alt_title\",\n        value: this.state.video.video_alt_title,\n        onChange: function onChange(e) {\n          return _this3.onChange(e);\n        },\n        placeholder: \"Video Alternative Title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group col-lg-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271\n        },\n        __self: this\n      }, \"Video Link(Youtube/Vimeo)\"), React.createElement(\"input\", {\n        type: \"text\",\n        required: true,\n        className: \"form-control form-control-alternative\",\n        id: \"link\",\n        name: \"link\",\n        value: this.state.video.link,\n        onChange: function onChange(e) {\n          return _this3.onChange(e);\n        },\n        placeholder: \"Video Link(Youtube/Vimeo)\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group col-lg-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285\n        },\n        __self: this\n      }, \"Video Description\"), React.createElement(\"textarea\", {\n        className: \"form-control form-control-alternative\",\n        name: \"description\",\n        onChange: function onChange(e) {\n          return _this3.onChange(e);\n        },\n        value: this.state.video.description,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group col-lg-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296\n        },\n        __self: this\n      }, \"Subject(To which video related)\"), React.createElement(\"select\", {\n        className: \"form-control form-control-alternative\",\n        name: \"subject\",\n        onChange: function onChange(e) {\n          return _this3.onChange(e);\n        },\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297\n        },\n        __self: this\n      }, this.state.all_subjects.map(function (subject, index) {\n        return React.createElement(\"option\", {\n          value: subject.id,\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 300\n          },\n          __self: this\n        }, subject.subject_name);\n      }))), React.createElement(\"div\", {\n        className: \"form-group col-lg-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 306\n        },\n        __self: this\n      }, \"Video related topics\"), React.createElement(\"select\", {\n        className: \"form-control form-control-alternative\",\n        style: {\n          height: '400px'\n        },\n        name: \"topics\",\n        multiple: true,\n        onChange: function onChange(e) {\n          return _this3.onChange(e);\n        },\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 307\n        },\n        __self: this\n      }, this.state.all_topics.map(function (topic, index) {\n        return React.createElement(\"option\", {\n          value: topic.id,\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 310\n          },\n          __self: this\n        }, topic.topic_title);\n      }))), React.createElement(\"div\", {\n        className: \"form-group col-lg-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 315\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"submit\",\n        className: \"btn btn-primary btn-lg\",\n        value: \"Add Now\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 316\n        },\n        __self: this\n      })))))))))), React.createElement(Footer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 337\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return addQuestion;\n}(Component);\n\n;\nexport default addQuestion;","map":{"version":3,"sources":["/Users/Jarvis/Desktop/projects/examsnu/educator/src/components/Collection/Questions/addQuestion.jsx"],"names":["React","Component","Redirect","BASE_URL","Footer","Sidebar","Navbar","Link","Loader","cutString","Moment","addQuestion","props","state","isAuthenticated","sessionStorage","getItem","profile","JSON","parse","isLoading","error","message","all_subjects","id","subject_name","alternative_name","description","is_deleted","all_topics","topic_title","document","title","fetch","method","headers","Authorization","then","response","ok","Error","status","json","subjectJson","topicsJson","setState","catch","event","addNewQuestion","question","e","onChange","hindi_question","solution","hindi_solution","correct_marks","negative_marks","video","video_alt_title","link","map","subject","index","height","topic"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {Redirect} from 'react-router-dom';\n\nimport {BASE_URL} from '../../../services/BaseUrl';\nimport Footer from '../../../layouts/Footer';\nimport Sidebar from '../../../layouts/Sidebar';\nimport Navbar from '../../../layouts/Navbar';\nimport {Link} from 'react-router-dom';\nimport Loader from '../../../assets/img/loading.gif';\nimport {cutString} from '../../../services/cutString';\nimport Moment from 'moment'\n\nclass addQuestion extends Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            isAuthenticated: !!sessionStorage.getItem('examsnuDashToken'),\n            profile: JSON.parse(sessionStorage.getItem('examsnuDashProfile')),\n\n            isLoading:true,\n            error:false,\n            message:'',\n\n            all_subjects:[\n                { id: 0, subject_name: \" \", alternative_name: \" \", description:\" \",is_deleted:false, },\n            ],\n            all_topics:[\n                { id: 0, topic_title: \"\", is_deleted: false, },\n            ],\n\n        };\n    }\n\n    componentDidMount() {\n        document.title = \"Add New Question - examsnu.in\";\n\n        if (this.state.isAuthenticated) {\n            fetch(`${BASE_URL}subjects/`, {\n                method: \"GET\",\n                headers: {\n                    Authorization: `Token ${sessionStorage.getItem('examsnuDashToken')}`\n                },\n            })\n                .then((response) => {\n                    if(!response.ok){\n                        throw new Error(response.status)\n                    }else{\n                        return response.json();\n                    }\n                })\n                .then((subjectJson) => {\n                    // This is for Calling all available topics\n\n                    fetch(`${BASE_URL}topics/`, {\n                        method: \"GET\",\n                        headers: {\n                            Authorization: `Token ${sessionStorage.getItem('examsnuDashToken')}`\n                        },\n                    })\n                        .then((response) => {\n                            if(!response.ok){\n                                throw new Error(response.status)\n                            }else{\n                                return response.json();\n                            }\n                        })\n                        .then((topicsJson) => {\n                            this.setState({\n                                all_subjects:subjectJson,\n                                all_topics:topicsJson,\n                                isLoading:false,\n                            })\n                        })\n                        .catch((error) => {\n                            this.setState({\n                                error:true,\n                                isLoading:false,\n                                message:'Some Error Occurred',\n                            })\n                        });\n\n\n                })\n                .catch((error) => {\n                    this.setState({\n                        error:true,\n                        isLoading:false,\n                        message:'Some Error Occurred',\n                    })\n                });\n        }\n    };\n    render(){\n        if(!this.state.isAuthenticated){\n            return(<Redirect to=\"/login\"/>);\n        }\n        return(\n            <div>\n                <Sidebar/>\n                <div className=\"main-content\">\n                    <Navbar/>\n\n\n                    <div className=\"header bg-gradient-primary pb-8 pt-5 pt-md-8\">\n                        <div className=\"container-fluid\">\n                            <div className=\"header-body\">\n                                <h2 className=\"headline\">Add New Question</h2>\n                            </div>\n                            <Link to={`/collection/questions`} className=\"btn btn-info btn-lg\">Check Question Collection</Link>\n                        </div>\n                    </div>\n                    <div className=\"container-fluid mt--7\">\n\n                        {/*Content Starts Here*/}\n\n                        <div className=\"row mt-5\">\n                            <div className=\"col\">\n                                <div className=\"card shadow\">\n                                    <div className=\"card-header bg-transparent\">\n                                        <h3 className=\"mb-0\">Add New Question</h3>\n                                    </div>\n\n                                    {/*Warning Message*/}\n                                    <div className=\"margin\">\n                                        {this.state.message && this.state.error ? (\n                                            <div className=\"alert alert-danger\" role=\"alert\">\n                                                {this.state.message}\n                                            </div>\n                                        ) : (\n                                            this.state.message && !this.state.error ? (\n                                                <div className=\"alert alert-info\" role=\"alert\">\n                                                    {this.state.message}\n                                                </div>\n                                            ) : ''\n                                        )}\n                                    </div>\n\n                                    {/*Loader*/}\n                                    <div className=\"loader-justify\">\n                                        <img\n                                            src={Loader}\n                                            className={!this.state.isLoading ? \"hideBox\" : \"loader\"}\n                                            alt=\"Loader\"\n                                        />\n                                    </div>\n\n                                    <div  className={this.state.isLoading ? \"card-body hideBox\" : \"card-body\"}>\n                                        <div className=\"row icon-examples\">\n\n                                            {/*Form for adding Video starts*/}\n                                            <div className=\"col-lg-12\">\n                                                <form onSubmit={(event) => this.addNewQuestion(event)} ref=\"form\">\n                                                    <div className=\"row\">\n                                                        <div className=\"form-group col-lg-12\">\n                                                            <label>Write Question Here(In English)(If Have any image then insert with img tag).</label>\n                                                            <textarea\n                                                                type=\"text\"\n                                                                required={true}\n                                                                className=\"form-control form-control-alternative\"\n                                                                id=\"question\"\n                                                                name=\"question\"\n                                                                value={this.state.question.question}\n                                                                onChange={(e) => this.onChange(e)}\n                                                                placeholder=\"Question in English\"\n                                                            >\n                                                            </textarea>\n                                                        </div>\n                                                        <div className=\"form-group col-lg-12\">\n                                                            <label>Write Question Here(In Hindi)(If Have any image then insert with img tag).</label>\n                                                            <textarea\n                                                                type=\"text\"\n                                                                required={true}\n                                                                className=\"form-control form-control-alternative\"\n                                                                id=\"question\"\n                                                                name=\"question\"\n                                                                value={this.state.question.hindi_question}\n                                                                onChange={(e) => this.onChange(e)}\n                                                                placeholder=\"Question in Hindi\"\n                                                            >\n                                                            </textarea>\n                                                        </div>\n                                                        <div className=\"form-group col-lg-12\">\n                                                            <label>Write Question's Solution Here(In English)(If Have any image then insert with img tag).</label>\n                                                            <textarea\n                                                                type=\"text\"\n                                                                required={true}\n                                                                className=\"form-control form-control-alternative\"\n                                                                id=\"solution\"\n                                                                name=\"solution\"\n                                                                value={this.state.question.solution}\n                                                                onChange={(e) => this.onChange(e)}\n                                                                placeholder=\"Question's Solution in English\"\n                                                            >\n                                                            </textarea>\n                                                        </div>\n                                                        <div className=\"form-group col-lg-12\">\n                                                            <label>Write Question's Solution Here(In Hindi)(If Have any image then insert with img tag).</label>\n                                                            <textarea\n                                                                type=\"text\"\n                                                                required={true}\n                                                                className=\"form-control form-control-alternative\"\n                                                                id=\"hindi_solution\"\n                                                                name=\"hindi_solution\"\n                                                                value={this.state.question.hindi_solution}\n                                                                onChange={(e) => this.onChange(e)}\n                                                                placeholder=\"Question's Solution in Hindi\"\n                                                            >\n                                                            </textarea>\n                                                        </div>\n                                                        <div className=\"form-group col-lg-12\">\n                                                            <label>Question Type</label>\n                                                            <select className=\"form-control form-control-alternative\" name=\"question_type\" onChange={(e) => this.onChange(e)} required={true}>\n                                                                <option value=\"1\">Single Correct</option>\n                                                                <option value=\"2\">Multiple Correct</option>\n                                                                <option value=\"3\">Integer Type</option>\n                                                                <option value=\"4\">Fill in the Blanks</option>\n                                                                <option value=\"5\">True/False</option>\n                                                            </select>\n                                                        </div>\n                                                        <div className=\"form-group col-lg-12\">\n                                                            <label>Marks for Correct Answer</label>\n                                                            <input\n                                                                type=\"number\"\n                                                                step=\"0.01\"\n                                                                required={true}\n                                                                className=\"form-control form-control-alternative\"\n                                                                id=\"correct_marks\"\n                                                                name=\"correct_marks\"\n                                                                value={this.state.question.correct_marks}\n                                                                onChange={(e) => this.onChange(e)}\n                                                                placeholder=\"Marks for Correct Answer\"\n                                                            />\n                                                        </div>\n                                                        <div className=\"form-group col-lg-12\">\n                                                            <label>Negative Marks for Incorrect Answer</label>\n                                                            <input\n                                                                type=\"number\"\n                                                                step=\"0.01\"\n                                                                required={true}\n                                                                className=\"form-control form-control-alternative\"\n                                                                id=\"negative_marks\"\n                                                                name=\"negative_marks\"\n                                                                value={this.state.question.negative_marks}\n                                                                onChange={(e) => this.onChange(e)}\n                                                                placeholder=\"Negative Marks for Incorrect Answer\"\n                                                            />\n                                                        </div>\n                                                        <div className=\"form-group col-lg-12\">\n                                                            <label>Is Negative Marking?</label>\n                                                            <select className=\"form-control form-control-alternative\" name=\"question_type\" onChange={(e) => this.onChange(e)} required={true}>\n                                                                <option value=\"true\">Yes</option>\n                                                                <option value=\"false\">No</option>\n                                                            </select>\n                                                        </div>\n\n                                                        <div className=\"form-group col-lg-12\">\n                                                            <label>Video Alternative Title</label>\n                                                            <input\n                                                                type=\"text\"\n                                                                required={true}\n                                                                className=\"form-control form-control-alternative\"\n                                                                id=\"video_alt_title\"\n                                                                name=\"video_alt_title\"\n                                                                value={this.state.video.video_alt_title}\n                                                                onChange={(e) => this.onChange(e)}\n                                                                placeholder=\"Video Alternative Title\"\n                                                            />\n                                                        </div>\n\n                                                        <div className=\"form-group col-lg-12\">\n                                                            <label>Video Link(Youtube/Vimeo)</label>\n                                                            <input\n                                                                type=\"text\"\n                                                                required={true}\n                                                                className=\"form-control form-control-alternative\"\n                                                                id=\"link\"\n                                                                name=\"link\"\n                                                                value={this.state.video.link}\n                                                                onChange={(e) => this.onChange(e)}\n                                                                placeholder=\"Video Link(Youtube/Vimeo)\"\n                                                            />\n                                                        </div>\n\n                                                        <div className=\"form-group col-lg-12\">\n                                                            <label>Video Description</label>\n                                                            <textarea\n                                                                className=\"form-control form-control-alternative\"\n                                                                name=\"description\"\n                                                                onChange={(e) => this.onChange(e)}\n                                                                value={this.state.video.description}>\n\n                                                            </textarea>\n                                                        </div>\n\n                                                        <div className=\"form-group col-lg-12\">\n                                                            <label>Subject(To which video related)</label>\n                                                            <select className=\"form-control form-control-alternative\" name=\"subject\" onChange={(e) => this.onChange(e)} required={true}>\n                                                                {\n                                                                    this.state.all_subjects.map((subject, index)=>(\n                                                                        <option value={subject.id} key={index}>{subject.subject_name}</option>\n                                                                    ))\n                                                                }\n                                                            </select>\n                                                        </div>\n                                                        <div className=\"form-group col-lg-12\">\n                                                            <label>Video related topics</label>\n                                                            <select className=\"form-control form-control-alternative\" style={{height:'400px'}} name=\"topics\"  multiple={true} onChange={(e) => this.onChange(e)} required={true}>\n                                                                {\n                                                                    this.state.all_topics.map((topic, index)=>(\n                                                                        <option value={topic.id} key={index}>{topic.topic_title}</option>\n                                                                    ))\n                                                                }\n                                                            </select>\n                                                        </div>\n                                                        <div className=\"form-group col-lg-12\">\n                                                            <input type=\"submit\" className=\"btn btn-primary btn-lg\" value=\"Add Now\"/>\n                                                        </div>\n                                                    </div>\n\n\n                                                </form>\n                                            </div>\n                                            {/*Form for adding Video ends*/}\n\n\n\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n\n                        {/*Content Ends Here*/}\n\n\n                        {/*Footer*/}\n                        <Footer />\n                    </div>\n                </div>\n            </div>\n        )\n    }\n};\n\nexport default addQuestion;\n\n"]},"metadata":{},"sourceType":"module"}