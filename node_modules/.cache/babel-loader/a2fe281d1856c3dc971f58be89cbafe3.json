{"ast":null,"code":"import _defineProperty from \"/Users/Jarvis/Desktop/projects/examsnu/educator/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/Jarvis/Desktop/projects/examsnu/educator/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/Jarvis/Desktop/projects/examsnu/educator/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Jarvis/Desktop/projects/examsnu/educator/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Jarvis/Desktop/projects/examsnu/educator/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Jarvis/Desktop/projects/examsnu/educator/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Jarvis/Desktop/projects/examsnu/educator/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/Jarvis/Desktop/projects/examsnu/educator/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/Jarvis/Desktop/projects/examsnu/educator/src/components/Collection/Questions/viewQuestion.jsx\";\nimport React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { BASE_URL } from '../../../services/BaseUrl';\nimport Footer from '../../../layouts/Footer';\nimport Sidebar from '../../../layouts/Sidebar';\nimport Navbar from '../../../layouts/Navbar';\nimport { Link } from 'react-router-dom';\nimport Loader from '../../../assets/img/loading.gif';\n\nvar viewQuestion =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(viewQuestion, _Component);\n\n  function viewQuestion(props) {\n    var _this;\n\n    _classCallCheck(this, viewQuestion);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(viewQuestion).call(this, props));\n\n    _this.onChange = function (e) {\n      e.preventDefault();\n\n      if (e.target.name === 'topics') {\n        _this.setState({\n          question_topics: [].slice.call(e.target.selectedOptions).map(function (o) {\n            return o.value;\n          })\n        });\n      } else {\n        _this.setState({\n          question: _objectSpread({}, _this.state.question, _defineProperty({}, e.target.name, e.target.value))\n        });\n      }\n    };\n\n    _this.editQuestion = function (e) {\n      _this.setState({\n        isLoading: true\n      });\n\n      e.preventDefault();\n      var formData = new FormData(e.target);\n      var questionDet = {};\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = formData.entries()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var entry = _step.value;\n          questionDet[entry[0]] = entry[1];\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      questionDet['topics'] = _this.state.question_topics;\n      fetch(\"\".concat(BASE_URL, \"questions/\"), {\n        method: \"POST\",\n        headers: {\n          Authorization: \"Token \".concat(sessionStorage.getItem('examsnuDashToken'))\n        },\n        body: JSON.stringify(questionDet)\n      }).then(function (response) {\n        if (!response.ok) {\n          throw new Error(response.status);\n        } else {\n          return response.json();\n        }\n      }).then(function (responseJson) {\n        _this.setState({\n          isLoading: false,\n          questionID: responseJson.id\n        });\n      }).catch(function (error) {\n        _this.setState({\n          error: true,\n          isLoading: false,\n          openModal: false,\n          message: 'Some Error Occurred'\n        });\n      });\n      return false;\n    };\n\n    _this.state = {\n      isAuthenticated: !!sessionStorage.getItem('examsnuDashToken'),\n      profile: JSON.parse(sessionStorage.getItem('examsnuDashProfile')),\n      isLoading: true,\n      error: false,\n      message: '',\n      questionID: 'None',\n      question: [{\n        id: \"\",\n        topics: [{\n          id: \"\",\n          topic_title: \"\"\n        }],\n        subject: {\n          id: \"\",\n          subject_name: \"\"\n        },\n        options: [{\n          id: \"\",\n          option_title: \"\"\n        }],\n        correct_options: [{\n          id: \"\",\n          option_title: \"\"\n        }],\n        created_by: \"\",\n        created_by_id: \"\",\n        question: \"\",\n        hindi_question: \"\",\n        solution: \"\",\n        hindi_solution: \"\",\n        question_type: \"\",\n        correct_marks: \"\",\n        negative_marks: \"\",\n        is_negative_marking: \"\",\n        is_deleted: \"\"\n      }],\n      question_topics: [],\n      all_subjects: [{\n        id: 0,\n        subject_name: \" \",\n        alternative_name: \" \",\n        description: \" \",\n        is_deleted: false\n      }],\n      all_topics: [{\n        id: 0,\n        topic_title: \"\",\n        is_deleted: false\n      }]\n    };\n    _this.onChange = _this.onChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.editQuestion = _this.editQuestion.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(viewQuestion, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      document.title = \"Update Question - examsnu.in\";\n\n      if (this.state.isAuthenticated) {\n        fetch(\"\".concat(BASE_URL, \"question/?id=\").concat(this.props.match.params.question_id), {\n          method: \"GET\",\n          headers: {\n            Authorization: \"Token \".concat(sessionStorage.getItem('examsnuDashToken'))\n          }\n        }).then(function (response) {\n          if (!response.ok) {\n            throw new Error(response.status);\n          } else {\n            return response.json();\n          }\n        }).then(function (responseJson) {\n          _this2.setState({\n            question: responseJson,\n            isLoading: false\n          });\n        }).catch(function (error) {\n          _this2.setState({\n            error: true,\n            isLoading: false,\n            message: 'Some Error Occurred'\n          });\n        });\n        fetch(\"\".concat(BASE_URL, \"subjects/\"), {\n          method: \"GET\",\n          headers: {\n            Authorization: \"Token \".concat(sessionStorage.getItem('examsnuDashToken'))\n          }\n        }).then(function (response) {\n          if (!response.ok) {\n            throw new Error(response.status);\n          } else {\n            return response.json();\n          }\n        }).then(function (subjectJson) {\n          // This is for Calling all available topics\n          fetch(\"\".concat(BASE_URL, \"topics/\"), {\n            method: \"GET\",\n            headers: {\n              Authorization: \"Token \".concat(sessionStorage.getItem('examsnuDashToken'))\n            }\n          }).then(function (response) {\n            if (!response.ok) {\n              throw new Error(response.status);\n            } else {\n              return response.json();\n            }\n          }).then(function (topicsJson) {\n            _this2.setState({\n              all_subjects: subjectJson,\n              all_topics: topicsJson,\n              isLoading: false\n            });\n          }).catch(function (error) {\n            _this2.setState({\n              error: true,\n              isLoading: false,\n              message: 'Some Error Occurred'\n            });\n          });\n        }).catch(function (error) {\n          _this2.setState({\n            error: true,\n            isLoading: false,\n            message: 'Some Error Occurred'\n          });\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      if (!this.state.isAuthenticated) {\n        return React.createElement(Redirect, {\n          to: \"/login\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 188\n          },\n          __self: this\n        });\n      }\n\n      if (this.state.questionID !== 'None') {\n        return React.createElement(Redirect, {\n          to: \"/collection/question/edit/\".concat(this.state.questionID),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 191\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, React.createElement(Sidebar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"main-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }, React.createElement(Navbar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"header bg-gradient-primary pb-8 pt-5 pt-md-8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container-fluid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"header-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        className: \"headline\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      }, \"Add New Question\")), React.createElement(Link, {\n        to: \"/collection/questions\",\n        className: \"btn btn-info btn-lg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }, \"Check Question Collection\"))), React.createElement(\"div\", {\n        className: \"container-fluid mt--7\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row mt-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card shadow\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card-header bg-transparent\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        className: \"mb-0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      }, \"Add New Question\")), React.createElement(\"div\", {\n        className: \"margin\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      }, this.state.message && this.state.error ? React.createElement(\"div\", {\n        className: \"alert alert-danger\",\n        role: \"alert\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222\n        },\n        __self: this\n      }, this.state.message) : this.state.message && !this.state.error ? React.createElement(\"div\", {\n        className: \"alert alert-info\",\n        role: \"alert\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }, this.state.message) : ''), React.createElement(\"div\", {\n        className: \"loader-justify\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: Loader,\n        className: !this.state.isLoading ? \"hideBox\" : \"loader\",\n        alt: \"Loader\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: this.state.isLoading ? \"card-body hideBox\" : \"card-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row icon-examples\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-lg-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: function onSubmit(event) {\n          return _this3.editQuestion(event);\n        },\n        ref: \"form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-group col-lg-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251\n        },\n        __self: this\n      }, \"Write Question Here(In English)(If Have any image then insert with img tag).\"), React.createElement(\"textarea\", {\n        type: \"text\",\n        required: true,\n        className: \"form-control form-control-alternative\",\n        id: \"question\",\n        name: \"question\",\n        value: this.state.question.question,\n        onChange: function onChange(e) {\n          return _this3.onChange(e);\n        },\n        placeholder: \"Question in English\",\n        rows: \"5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group col-lg-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266\n        },\n        __self: this\n      }, \"Write Question Here(In Hindi)(If Have any image then insert with img tag).\"), React.createElement(\"textarea\", {\n        type: \"text\",\n        required: true,\n        className: \"form-control form-control-alternative\",\n        id: \"hindi_question\",\n        name: \"hindi_question\",\n        value: this.state.question.hindi_question,\n        onChange: function onChange(e) {\n          return _this3.onChange(e);\n        },\n        placeholder: \"Question in Hindi\",\n        rows: \"5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group col-lg-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281\n        },\n        __self: this\n      }, \"Write Question's Solution Here(In English)(If Have any image then insert with img tag).\"), React.createElement(\"textarea\", {\n        type: \"text\",\n        required: true,\n        className: \"form-control form-control-alternative\",\n        id: \"solution\",\n        name: \"solution\",\n        value: this.state.question.solution,\n        onChange: function onChange(e) {\n          return _this3.onChange(e);\n        },\n        placeholder: \"Question's Solution in English\",\n        rows: \"5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group col-lg-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296\n        },\n        __self: this\n      }, \"Write Question's Solution Here(In Hindi)(If Have any image then insert with img tag).\"), React.createElement(\"textarea\", {\n        type: \"text\",\n        required: true,\n        className: \"form-control form-control-alternative\",\n        id: \"hindi_solution\",\n        name: \"hindi_solution\",\n        value: this.state.question.hindi_solution,\n        onChange: function onChange(e) {\n          return _this3.onChange(e);\n        },\n        placeholder: \"Question's Solution in Hindi\",\n        rows: \"5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group col-lg-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 310\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 311\n        },\n        __self: this\n      }, \"Question Type\"), React.createElement(\"select\", {\n        className: \"form-control form-control-alternative\",\n        name: \"question_type\",\n        onChange: function onChange(e) {\n          return _this3.onChange(e);\n        },\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 312\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 313\n        },\n        __self: this\n      }, \"Single Correct\"), React.createElement(\"option\", {\n        value: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 314\n        },\n        __self: this\n      }, \"Multiple Correct\"), React.createElement(\"option\", {\n        value: \"3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 315\n        },\n        __self: this\n      }, \"Integer Type\"), React.createElement(\"option\", {\n        value: \"4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 316\n        },\n        __self: this\n      }, \"Fill in the Blanks\"), React.createElement(\"option\", {\n        value: \"5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 317\n        },\n        __self: this\n      }, \"True/False\"))), React.createElement(\"div\", {\n        className: \"form-group col-lg-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 320\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 321\n        },\n        __self: this\n      }, \"Marks for Correct Answer\"), React.createElement(\"input\", {\n        type: \"number\",\n        step: \"0.01\",\n        required: true,\n        className: \"form-control form-control-alternative\",\n        id: \"correct_marks\",\n        name: \"correct_marks\",\n        value: this.state.question.correct_marks,\n        onChange: function onChange(e) {\n          return _this3.onChange(e);\n        },\n        placeholder: \"Marks for Correct Answer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 322\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group col-lg-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 334\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 335\n        },\n        __self: this\n      }, \"Negative Marks for Incorrect Answer\"), React.createElement(\"input\", {\n        type: \"number\",\n        step: \"0.01\",\n        required: true,\n        className: \"form-control form-control-alternative\",\n        id: \"negative_marks\",\n        name: \"negative_marks\",\n        value: this.state.question.negative_marks,\n        onChange: function onChange(e) {\n          return _this3.onChange(e);\n        },\n        placeholder: \"Negative Marks for Incorrect Answer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 336\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group col-lg-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 348\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 349\n        },\n        __self: this\n      }, \"Is Negative Marking?\"), React.createElement(\"select\", {\n        className: \"form-control form-control-alternative\",\n        name: \"is_negative_marking\",\n        onChange: function onChange(e) {\n          return _this3.onChange(e);\n        },\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 350\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"true\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 351\n        },\n        __self: this\n      }, \"Yes\"), React.createElement(\"option\", {\n        value: \"false\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 352\n        },\n        __self: this\n      }, \"No\"))), React.createElement(\"div\", {\n        className: \"form-group col-lg-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 355\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 356\n        },\n        __self: this\n      }, \"Subject(To which video related)\"), React.createElement(\"select\", {\n        className: \"form-control form-control-alternative\",\n        name: \"subject\",\n        onChange: function onChange(e) {\n          return _this3.onChange(e);\n        },\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 357\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: console.log(this.state.question.subject.id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 358\n        },\n        __self: this\n      }), this.state.all_subjects.map(function (subject, index) {\n        return React.createElement(\"option\", {\n          value: subject.id,\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 361\n          },\n          __self: this\n        }, subject.subject_name);\n      }))), React.createElement(\"div\", {\n        className: \"form-group col-lg-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 366\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 367\n        },\n        __self: this\n      }, \"Video related topics\"), React.createElement(\"select\", {\n        className: \"form-control form-control-alternative\",\n        style: {\n          height: '400px'\n        },\n        name: \"topics\",\n        multiple: true,\n        onChange: function onChange(e) {\n          return _this3.onChange(e);\n        },\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 368\n        },\n        __self: this\n      }, this.state.all_topics.map(function (topic, index) {\n        return React.createElement(\"option\", {\n          value: topic.id,\n          key: index,\n          checked: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 371\n          },\n          __self: this\n        }, topic.topic_title);\n      }))), React.createElement(\"div\", {\n        className: \"form-group col-lg-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 376\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"submit\",\n        className: \"btn btn-primary btn-lg\",\n        value: \"Update Now\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 377\n        },\n        __self: this\n      })))))))))), React.createElement(Footer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 398\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return viewQuestion;\n}(Component);\n\n;\nexport default viewQuestion;","map":{"version":3,"sources":["/Users/Jarvis/Desktop/projects/examsnu/educator/src/components/Collection/Questions/viewQuestion.jsx"],"names":["React","Component","Redirect","BASE_URL","Footer","Sidebar","Navbar","Link","Loader","viewQuestion","props","onChange","e","preventDefault","target","name","setState","question_topics","slice","call","selectedOptions","map","o","value","question","state","editQuestion","isLoading","formData","FormData","questionDet","entries","entry","fetch","method","headers","Authorization","sessionStorage","getItem","body","JSON","stringify","then","response","ok","Error","status","json","responseJson","questionID","id","catch","error","openModal","message","isAuthenticated","profile","parse","topics","topic_title","subject","subject_name","options","option_title","correct_options","created_by","created_by_id","hindi_question","solution","hindi_solution","question_type","correct_marks","negative_marks","is_negative_marking","is_deleted","all_subjects","alternative_name","description","all_topics","bind","document","title","match","params","question_id","subjectJson","topicsJson","event","console","log","index","height","topic"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {Redirect} from 'react-router-dom';\n\nimport {BASE_URL} from '../../../services/BaseUrl';\nimport Footer from '../../../layouts/Footer';\nimport Sidebar from '../../../layouts/Sidebar';\nimport Navbar from '../../../layouts/Navbar';\nimport {Link} from 'react-router-dom';\nimport Loader from '../../../assets/img/loading.gif';\n\nclass viewQuestion extends Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            isAuthenticated: !!sessionStorage.getItem('examsnuDashToken'),\n            profile: JSON.parse(sessionStorage.getItem('examsnuDashProfile')),\n\n            isLoading:true,\n            error:false,\n            message:'',\n            questionID:'None',\n\n            question:[{id:\"\",topics:[{id:\"\",topic_title:\"\"}],subject:{id:\"\",subject_name:\"\"},options:[{id:\"\",option_title:\"\"}],correct_options:[{id:\"\",option_title:\"\"}],created_by:\"\",created_by_id:\"\",question:\"\",hindi_question:\"\",solution:\"\",hindi_solution:\"\",question_type:\"\",correct_marks:\"\",negative_marks:\"\",is_negative_marking:\"\",is_deleted:\"\"}],\n            question_topics:[],\n\n            all_subjects:[\n                { id: 0, subject_name: \" \", alternative_name: \" \", description:\" \",is_deleted:false, },\n            ],\n            all_topics:[\n                { id: 0, topic_title: \"\", is_deleted: false, },\n            ],\n\n        };\n        this.onChange = this.onChange.bind(this);\n        this.editQuestion = this.editQuestion.bind(this);\n    }\n\n    componentDidMount() {\n        document.title = \"Update Question - examsnu.in\";\n\n        if (this.state.isAuthenticated) {\n            fetch(`${BASE_URL}question/?id=${this.props.match.params.question_id}`, {\n                method: \"GET\",\n                headers: {\n                    Authorization: `Token ${sessionStorage.getItem('examsnuDashToken')}`\n                },\n            })\n                .then((response) => {\n                    if(!response.ok){\n                        throw new Error(response.status)\n                    }else{\n                        return response.json();\n                    }\n                })\n                .then((responseJson) => {\n                    this.setState({\n                        question:responseJson,\n                        isLoading:false,\n                    })\n                })\n                .catch((error) => {\n                    this.setState({\n                        error:true,\n                        isLoading:false,\n                        message:'Some Error Occurred',\n                    })\n                });\n\n            fetch(`${BASE_URL}subjects/`, {\n                method: \"GET\",\n                headers: {\n                    Authorization: `Token ${sessionStorage.getItem('examsnuDashToken')}`\n                },\n            })\n                .then((response) => {\n                    if(!response.ok){\n                        throw new Error(response.status)\n                    }else{\n                        return response.json();\n                    }\n                })\n                .then((subjectJson) => {\n                    // This is for Calling all available topics\n\n                    fetch(`${BASE_URL}topics/`, {\n                        method: \"GET\",\n                        headers: {\n                            Authorization: `Token ${sessionStorage.getItem('examsnuDashToken')}`\n                        },\n                    })\n                        .then((response) => {\n                            if(!response.ok){\n                                throw new Error(response.status)\n                            }else{\n                                return response.json();\n                            }\n                        })\n                        .then((topicsJson) => {\n                            this.setState({\n                                all_subjects:subjectJson,\n                                all_topics:topicsJson,\n                                isLoading:false,\n                            })\n                        })\n                        .catch((error) => {\n                            this.setState({\n                                error:true,\n                                isLoading:false,\n                                message:'Some Error Occurred',\n                            })\n                        });\n\n\n                })\n                .catch((error) => {\n                    this.setState({\n                        error:true,\n                        isLoading:false,\n                        message:'Some Error Occurred',\n                    })\n                });\n        }\n    };\n    onChange = (e) => {\n        e.preventDefault();\n\n        if(e.target.name === 'topics'){\n            this.setState({\n                question_topics: [].slice.call(e.target.selectedOptions).map(o => {\n                    return o.value;\n                })\n            });\n        }else{\n            this.setState({\n                question: {\n                    ...this.state.question, [e.target.name]: e.target.value\n                }\n            });\n        }\n    };\n    editQuestion = (e) => {\n        this.setState({\n            isLoading:true,\n        });\n        e.preventDefault();\n\n        const formData = new FormData(e.target);\n        const questionDet = {};\n\n        for (let entry of formData.entries()) {\n            questionDet[entry[0]] = entry[1]\n        }\n        questionDet['topics'] = this.state.question_topics;\n\n        fetch(`${BASE_URL}questions/`, {\n            method: \"POST\",\n            headers: {\n                Authorization: `Token ${sessionStorage.getItem('examsnuDashToken')}`\n            },\n            body:JSON.stringify(questionDet),\n        })\n            .then((response) => {\n                if(!response.ok){\n                    throw new Error(response.status)\n                }else{\n                    return response.json();\n                }\n            })\n            .then((responseJson) => {\n                this.setState({\n                    isLoading:false,\n                    questionID:responseJson.id,\n                });\n            })\n            .catch((error) => {\n                this.setState({\n                    error:true,\n                    isLoading:false,\n                    openModal:false,\n                    message:'Some Error Occurred',\n                })\n            });\n        return false;\n    };\n\n    render(){\n        if(!this.state.isAuthenticated){\n            return(<Redirect to=\"/login\"/>);\n        }\n        if(this.state.questionID !== 'None'){\n            return(<Redirect to={`/collection/question/edit/${this.state.questionID}`}  />);\n        }\n        return(\n            <div>\n                <Sidebar/>\n                <div className=\"main-content\">\n                    <Navbar/>\n\n\n                    <div className=\"header bg-gradient-primary pb-8 pt-5 pt-md-8\">\n                        <div className=\"container-fluid\">\n                            <div className=\"header-body\">\n                                <h2 className=\"headline\">Add New Question</h2>\n                            </div>\n                            <Link to={`/collection/questions`} className=\"btn btn-info btn-lg\">Check Question Collection</Link>\n                        </div>\n                    </div>\n                    <div className=\"container-fluid mt--7\">\n\n                        {/*Content Starts Here*/}\n\n                        <div className=\"row mt-5\">\n                            <div className=\"col\">\n                                <div className=\"card shadow\">\n                                    <div className=\"card-header bg-transparent\">\n                                        <h3 className=\"mb-0\">Add New Question</h3>\n                                    </div>\n\n                                    {/*Warning Message*/}\n                                    <div className=\"margin\">\n                                        {this.state.message && this.state.error ? (\n                                            <div className=\"alert alert-danger\" role=\"alert\">\n                                                {this.state.message}\n                                            </div>\n                                        ) : (\n                                            this.state.message && !this.state.error ? (\n                                                <div className=\"alert alert-info\" role=\"alert\">\n                                                    {this.state.message}\n                                                </div>\n                                            ) : ''\n                                        )}\n                                    </div>\n\n                                    {/*Loader*/}\n                                    <div className=\"loader-justify\">\n                                        <img\n                                            src={Loader}\n                                            className={!this.state.isLoading ? \"hideBox\" : \"loader\"}\n                                            alt=\"Loader\"\n                                        />\n                                    </div>\n\n                                    <div  className={this.state.isLoading ? \"card-body hideBox\" : \"card-body\"}>\n                                        <div className=\"row icon-examples\">\n\n                                            {/*Form for adding Video starts*/}\n                                            <div className=\"col-lg-12\">\n                                                <form onSubmit={(event) => this.editQuestion(event)} ref=\"form\">\n                                                    <div className=\"row\">\n                                                        <div className=\"form-group col-lg-12\">\n                                                            <label>Write Question Here(In English)(If Have any image then insert with img tag).</label>\n                                                            <textarea\n                                                                type=\"text\"\n                                                                required={true}\n                                                                className=\"form-control form-control-alternative\"\n                                                                id=\"question\"\n                                                                name=\"question\"\n                                                                value={this.state.question.question}\n                                                                onChange={(e) => this.onChange(e)}\n                                                                placeholder=\"Question in English\"\n                                                                rows=\"5\"\n                                                            >\n                                                            </textarea>\n                                                        </div>\n                                                        <div className=\"form-group col-lg-12\">\n                                                            <label>Write Question Here(In Hindi)(If Have any image then insert with img tag).</label>\n                                                            <textarea\n                                                                type=\"text\"\n                                                                required={true}\n                                                                className=\"form-control form-control-alternative\"\n                                                                id=\"hindi_question\"\n                                                                name=\"hindi_question\"\n                                                                value={this.state.question.hindi_question}\n                                                                onChange={(e) => this.onChange(e)}\n                                                                placeholder=\"Question in Hindi\"\n                                                                rows=\"5\"\n                                                            >\n                                                            </textarea>\n                                                        </div>\n                                                        <div className=\"form-group col-lg-12\">\n                                                            <label>Write Question's Solution Here(In English)(If Have any image then insert with img tag).</label>\n                                                            <textarea\n                                                                type=\"text\"\n                                                                required={true}\n                                                                className=\"form-control form-control-alternative\"\n                                                                id=\"solution\"\n                                                                name=\"solution\"\n                                                                value={this.state.question.solution}\n                                                                onChange={(e) => this.onChange(e)}\n                                                                placeholder=\"Question's Solution in English\"\n                                                                rows=\"5\"\n                                                            >\n                                                            </textarea>\n                                                        </div>\n                                                        <div className=\"form-group col-lg-12\">\n                                                            <label>Write Question's Solution Here(In Hindi)(If Have any image then insert with img tag).</label>\n                                                            <textarea\n                                                                type=\"text\"\n                                                                required={true}\n                                                                className=\"form-control form-control-alternative\"\n                                                                id=\"hindi_solution\"\n                                                                name=\"hindi_solution\"\n                                                                value={this.state.question.hindi_solution}\n                                                                onChange={(e) => this.onChange(e)}\n                                                                placeholder=\"Question's Solution in Hindi\"\n                                                                rows=\"5\"\n                                                            >\n                                                            </textarea>\n                                                        </div>\n                                                        <div className=\"form-group col-lg-12\">\n                                                            <label>Question Type</label>\n                                                            <select className=\"form-control form-control-alternative\" name=\"question_type\" onChange={(e) => this.onChange(e)} required={true}>\n                                                                <option value=\"1\">Single Correct</option>\n                                                                <option value=\"2\">Multiple Correct</option>\n                                                                <option value=\"3\">Integer Type</option>\n                                                                <option value=\"4\">Fill in the Blanks</option>\n                                                                <option value=\"5\">True/False</option>\n                                                            </select>\n                                                        </div>\n                                                        <div className=\"form-group col-lg-12\">\n                                                            <label>Marks for Correct Answer</label>\n                                                            <input\n                                                                type=\"number\"\n                                                                step=\"0.01\"\n                                                                required={true}\n                                                                className=\"form-control form-control-alternative\"\n                                                                id=\"correct_marks\"\n                                                                name=\"correct_marks\"\n                                                                value={this.state.question.correct_marks}\n                                                                onChange={(e) => this.onChange(e)}\n                                                                placeholder=\"Marks for Correct Answer\"\n                                                            />\n                                                        </div>\n                                                        <div className=\"form-group col-lg-12\">\n                                                            <label>Negative Marks for Incorrect Answer</label>\n                                                            <input\n                                                                type=\"number\"\n                                                                step=\"0.01\"\n                                                                required={true}\n                                                                className=\"form-control form-control-alternative\"\n                                                                id=\"negative_marks\"\n                                                                name=\"negative_marks\"\n                                                                value={this.state.question.negative_marks}\n                                                                onChange={(e) => this.onChange(e)}\n                                                                placeholder=\"Negative Marks for Incorrect Answer\"\n                                                            />\n                                                        </div>\n                                                        <div className=\"form-group col-lg-12\">\n                                                            <label>Is Negative Marking?</label>\n                                                            <select className=\"form-control form-control-alternative\" name=\"is_negative_marking\" onChange={(e) => this.onChange(e)} required={true}>\n                                                                <option value=\"true\">Yes</option>\n                                                                <option value=\"false\">No</option>\n                                                            </select>\n                                                        </div>\n                                                        <div className=\"form-group col-lg-12\">\n                                                            <label>Subject(To which video related)</label>\n                                                            <select className=\"form-control form-control-alternative\" name=\"subject\" onChange={(e) => this.onChange(e)} required={true}>\n                                                                <option value={console.log(this.state.question.subject.id)}></option>\n                                                                {\n                                                                    this.state.all_subjects.map((subject, index)=>(\n                                                                        <option value={subject.id} key={index}>{subject.subject_name}</option>\n                                                                    ))\n                                                                }\n                                                            </select>\n                                                        </div>\n                                                        <div className=\"form-group col-lg-12\">\n                                                            <label>Video related topics</label>\n                                                            <select className=\"form-control form-control-alternative\" style={{height:'400px'}} name=\"topics\"  multiple={true} onChange={(e) => this.onChange(e)} required={true}>\n                                                                {\n                                                                    this.state.all_topics.map((topic, index)=>(\n                                                                        <option value={topic.id} key={index} checked={true}>{topic.topic_title}</option>\n                                                                    ))\n                                                                }\n                                                            </select>\n                                                        </div>\n                                                        <div className=\"form-group col-lg-12\">\n                                                            <input type=\"submit\" className=\"btn btn-primary btn-lg\" value=\"Update Now\"/>\n                                                        </div>\n                                                    </div>\n\n\n                                                </form>\n                                            </div>\n                                            {/*Form for adding Video ends*/}\n\n\n\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n\n                        {/*Content Ends Here*/}\n\n\n                        {/*Footer*/}\n                        <Footer />\n                    </div>\n                </div>\n            </div>\n        )\n    }\n};\n\nexport default viewQuestion;\n\n"]},"metadata":{},"sourceType":"module"}