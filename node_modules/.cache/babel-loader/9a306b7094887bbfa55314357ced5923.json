{"ast":null,"code":"import _objectSpread from \"/Users/Jarvis/Desktop/projects/examsnu/educator/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _defineProperty from \"/Users/Jarvis/Desktop/projects/examsnu/educator/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _assertThisInitialized from \"/Users/Jarvis/Desktop/projects/examsnu/educator/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _classCallCheck from \"/Users/Jarvis/Desktop/projects/examsnu/educator/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Jarvis/Desktop/projects/examsnu/educator/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Jarvis/Desktop/projects/examsnu/educator/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Jarvis/Desktop/projects/examsnu/educator/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Jarvis/Desktop/projects/examsnu/educator/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Jarvis/Desktop/projects/examsnu/educator/src/components/Tools/Plans.jsx\";\nimport React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { BASE_URL } from '../../services/BaseUrl';\nimport Footer from '../../layouts/Footer';\nimport Sidebar from '../../layouts/Sidebar';\nimport Navbar from '../../layouts/Navbar';\nimport { Link } from 'react-router-dom';\nimport Loader from '../../assets/img/loading.gif';\n\nvar EditPlan =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(EditPlan, _Component);\n\n  function EditPlan() {\n    _classCallCheck(this, EditPlan);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(EditPlan).apply(this, arguments));\n  }\n\n  _createClass(EditPlan, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      return React.createElement(\"div\", {\n        className: this.props.modalShow ? \"modal fade modelBox show\" : \"modal fade modelBox hideModal\",\n        role: \"dialog\",\n        \"aria-labelledby\": \"exampleModalLabel\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"modal-dialog modal-dialog-centered\",\n        role: \"document\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"modal-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"modal-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, React.createElement(\"h5\", {\n        className: \"modal-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, \"Edit Plan\"), React.createElement(\"button\", {\n        type: \"button\",\n        className: \"close\",\n        \"aria-label\": \"Close\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        \"aria-hidden\": \"true\",\n        onClick: this.props.closeModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, \"\\xD7\"))), React.createElement(\"div\", {\n        className: \"modal-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: function onSubmit(e, id) {\n          return _this.props.onSubmit(e, _this.props.plan.id);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-group col-lg-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, \"Plan Name\"), React.createElement(\"input\", {\n        type: \"text\",\n        required: true,\n        className: \"form-control form-control-alternative\",\n        id: \"plan_name\",\n        name: \"plan_name\",\n        value: this.props.plan.plan_name,\n        placeholder: \"Plan Name\",\n        onChange: this.props.onChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group col-lg-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, \"Alternative Name\"), React.createElement(\"input\", {\n        type: \"text\",\n        required: true,\n        className: \"form-control form-control-alternative\",\n        id: \"alternative_name\",\n        name: \"alternative_name\",\n        value: this.props.plan.alternative_name,\n        placeholder: \"Alternative Name\",\n        onChange: this.props.onChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group col-lg-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, \"Price\"), React.createElement(\"input\", {\n        type: \"text\",\n        required: true,\n        className: \"form-control form-control-alternative\",\n        id: \"price\",\n        name: \"price\",\n        value: this.props.plan.price,\n        placeholder: \"Price\",\n        onChange: this.props.onChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group col-lg-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, \"Validity(In Days)\"), React.createElement(\"input\", {\n        type: \"number\",\n        required: true,\n        className: \"form-control form-control-alternative\",\n        id: \"validity\",\n        name: \"validity\",\n        value: this.props.plan.validity,\n        placeholder: \"Validity\",\n        onChange: this.props.onChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group col-lg-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, \"Description\"), React.createElement(\"input\", {\n        type: \"text\",\n        required: true,\n        className: \"form-control form-control-alternative\",\n        id: \"description\",\n        name: \"description\",\n        value: this.props.plan.description,\n        placeholder: \"Description\",\n        onChange: this.props.onChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group col-lg-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, \"Exams(Left Unchanged if need no changes)\"), React.createElement(\"select\", {\n        className: \"form-control form-control-alternative\",\n        name: \"exams\",\n        required: true,\n        multiple: true,\n        onChange: this.props.onChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, this.props.all_exams.map(function (exam, index) {\n        return React.createElement(\"option\", {\n          value: exam.id,\n          key: index,\n          selected: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97\n          },\n          __self: this\n        }, exam.exam_name);\n      }))), React.createElement(\"div\", {\n        className: \"form-group col-lg-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, \"Is Active?\"), React.createElement(\"select\", {\n        className: \"form-control form-control-alternative\",\n        name: \"is_active\",\n        onChange: this.props.onChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: this.props.plan.is_active ? 'true' : 'false',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, this.props.plan.is_active ? \"Yes\" : \"No\"), React.createElement(\"option\", {\n        value: \"true\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, \"Yes\"), React.createElement(\"option\", {\n        value: \"false\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, \"No\"))), React.createElement(\"div\", {\n        className: \"form-group col-lg-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, \"Is Deleted?\"), React.createElement(\"select\", {\n        className: \"form-control form-control-alternative\",\n        name: \"is_deleted\",\n        onChange: this.props.onChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: this.props.plan.is_deleted ? 'true' : 'false',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, this.props.plan.is_deleted ? \"Yes\" : \"No\"), React.createElement(\"option\", {\n        value: \"true\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, \"Yes\"), React.createElement(\"option\", {\n        value: \"false\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, \"No\"))), React.createElement(\"div\", {\n        className: \"form-group col-lg-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"btn btn-primary\",\n        value: \"Update\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, \"Update\"))))))));\n    }\n  }]);\n\n  return EditPlan;\n}(Component);\n\nvar Plans =\n/*#__PURE__*/\nfunction (_Component2) {\n  _inherits(Plans, _Component2);\n\n  function Plans(props) {\n    var _this2;\n\n    _classCallCheck(this, Plans);\n\n    _this2 = _possibleConstructorReturn(this, _getPrototypeOf(Plans).call(this, props));\n\n    _this2.updateValues = function (e) {\n      _this2.setState(_defineProperty({}, e.target.name, e.target.value));\n    };\n\n    _this2.newPlanExams = function (e) {\n      _this2.setState({\n        plan_exams: [].slice.call(e.target.selectedOptions).map(function (o) {\n          return o.value;\n        })\n      });\n    };\n\n    _this2.addNewPlan = function (event) {\n      _this2.setState({\n        isLoading: true\n      });\n\n      event.preventDefault();\n      var formData = new FormData(event.target);\n      var planDet = {};\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = formData.entries()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var entry = _step.value;\n          planDet[entry[0]] = entry[1];\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      planDet['exam_list'] = _this2.state.plan_exams;\n\n      if (_this2.state.isAuthenticated) {\n        fetch(\"\".concat(BASE_URL, \"plans/\"), {\n          method: \"POST\",\n          headers: {\n            Authorization: \"Token \".concat(sessionStorage.getItem('examsnuDashToken'))\n          },\n          body: JSON.stringify(planDet)\n        }).then(function (response) {\n          if (!response.ok) {\n            throw new Error(response.status);\n          } else {\n            return response.json();\n          }\n        }).then(function (responseJson) {\n          _this2.setState({\n            plans: responseJson,\n            isLoading: false\n          });\n        }).catch(function (error) {\n          _this2.setState({\n            error: true,\n            isLoading: false,\n            message: 'Some Error Occurred'\n          });\n        });\n      }\n\n      ;\n\n      _this2.setState({\n        plan_name: '',\n        alternative_name: '',\n        price: '',\n        description: '',\n        plan_exams: '',\n        validity: ''\n      });\n\n      _this2.refs.form.reset();\n\n      return false;\n    };\n\n    _this2.openModal = function (event, id) {\n      _this2.setState({\n        openModal: !_this2.state.openModal,\n        updatePlan: _this2.state.plans[id]\n      });\n    };\n\n    _this2.closeModal = function (event) {\n      _this2.setState({\n        openModal: !_this2.state.openModal\n      });\n    };\n\n    _this2.onUpdateChanges = function (e) {\n      e.preventDefault();\n\n      if (e.target.name === 'exams') {\n        _this2.setState({\n          updatedPlanExams: [].slice.call(e.target.selectedOptions).map(function (o) {\n            return o.value;\n          })\n        });\n      } else {\n        _this2.setState({\n          updatePlan: _objectSpread({}, _this2.state.updatePlan, _defineProperty({}, e.target.name, e.target.value))\n        });\n      }\n    };\n\n    _this2.updatePlan = function (e, id) {\n      _this2.setState({\n        isLoading: true\n      });\n\n      e.preventDefault();\n      var formData = new FormData(e.target);\n      var planDet = {};\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = formData.entries()[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var entry = _step2.value;\n          planDet[entry[0]] = entry[1];\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n            _iterator2.return();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n\n      var exams = [];\n\n      if (!_this2.state.updatedPlanExams) {\n        for (var i = 0; i < _this2.state.updatePlan.exams.length; i++) {\n          exams.push(_this2.state.updatePlan.exams[i].id);\n        }\n      } else {\n        exams = _this2.state.updatedPlanExams;\n      }\n\n      planDet['plan_id'] = id;\n      planDet['exams'] = exams;\n\n      if (_this2.state.isAuthenticated) {\n        fetch(\"\".concat(BASE_URL, \"plans/\"), {\n          method: \"PUT\",\n          headers: {\n            Authorization: \"Token \".concat(sessionStorage.getItem('examsnuDashToken'))\n          },\n          body: JSON.stringify(planDet)\n        }).then(function (response) {\n          if (!response.ok) {\n            throw new Error(response.status);\n          } else {\n            return response.json();\n          }\n        }).then(function (responseJson) {\n          _this2.setState({\n            plans: responseJson,\n            isLoading: false,\n            openModal: false,\n            updatePlan: '',\n            updatedPlanExams: ''\n          });\n        }).catch(function (error) {\n          _this2.setState({\n            error: true,\n            isLoading: false,\n            openModal: false,\n            message: 'Some Error Occurred'\n          });\n        });\n      }\n\n      return false;\n    };\n\n    _this2.state = {\n      isAuthenticated: !!sessionStorage.getItem('examsnuDashToken'),\n      profile: JSON.parse(sessionStorage.getItem('examsnuDashProfile')),\n      all_exams: [{\n        id: 0,\n        exam_category: \"\",\n        subjects: [{\n          id: 0,\n          subject_name: \" \",\n          alternative_name: \" \",\n          description: \" \"\n        }],\n        exam_name: \"\",\n        alternative_name: \"\",\n        is_deleted: false\n      }],\n      plans: [{\n        id: 0,\n        plan_name: \"\",\n        alternative_name: \"\",\n        price: \"\",\n        description: \"\",\n        exams: [{\n          id: 0,\n          exam_category: \"\",\n          subjects: [{\n            id: 0,\n            subject_name: \" \",\n            alternative_name: \" \",\n            description: \" \"\n          }],\n          exam_name: \"\",\n          alternative_name: \"\"\n        }],\n        validity: \"\",\n        is_deleted: false,\n        is_active: false\n      }],\n      isLoading: true,\n      error: false,\n      message: '',\n      openModal: false,\n      plan_name: '',\n      alternative_name: '',\n      price: '',\n      description: '',\n      plan_exams: '',\n      validity: '',\n      updatePlan: '',\n      updatedPlanExams: ''\n    };\n    _this2.updateValues = _this2.updateValues.bind(_assertThisInitialized(_assertThisInitialized(_this2)));\n    _this2.newPlanExams = _this2.newPlanExams.bind(_assertThisInitialized(_assertThisInitialized(_this2)));\n    _this2.addNewPlan = _this2.addNewPlan.bind(_assertThisInitialized(_assertThisInitialized(_this2)));\n    _this2.updatePlan = _this2.updatePlan.bind(_assertThisInitialized(_assertThisInitialized(_this2)));\n    _this2.openModal = _this2.openModal.bind(_assertThisInitialized(_assertThisInitialized(_this2)));\n    _this2.closeModal = _this2.closeModal.bind(_assertThisInitialized(_assertThisInitialized(_this2)));\n    _this2.onUpdateChanges = _this2.onUpdateChanges.bind(_assertThisInitialized(_assertThisInitialized(_this2)));\n    return _this2;\n  }\n\n  _createClass(Plans, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this3 = this;\n\n      document.title = \"All Available Plans - EXAMSNU.IN\";\n\n      if (this.state.isAuthenticated) {\n        fetch(\"\".concat(BASE_URL, \"plans/\"), {\n          method: \"GET\",\n          headers: {\n            Authorization: \"Token \".concat(sessionStorage.getItem('examsnuDashToken'))\n          }\n        }).then(function (response) {\n          if (!response.ok) {\n            throw new Error(response.status);\n          } else {\n            return response.json();\n          }\n        }).then(function (responseJson) {\n          // This is for Calling all available exam categories\n          fetch(\"\".concat(BASE_URL, \"exams/\"), {\n            method: \"GET\",\n            headers: {\n              Authorization: \"Token \".concat(sessionStorage.getItem('examsnuDashToken'))\n            }\n          }).then(function (response) {\n            if (!response.ok) {\n              throw new Error(response.status);\n            } else {\n              return response.json();\n            }\n          }).then(function (examsJson) {\n            _this3.setState({\n              all_exams: examsJson,\n              plans: responseJson,\n              isLoading: false\n            });\n          }).catch(function (error) {\n            _this3.setState({\n              error: true,\n              isLoading: false,\n              message: 'Some Error Occurred'\n            });\n          });\n        }).catch(function (error) {\n          _this3.setState({\n            error: true,\n            isLoading: false,\n            message: 'Some Error Occurred'\n          });\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      if (!this.state.isAuthenticated) {\n        return React.createElement(Redirect, {\n          to: \"/login\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 402\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 405\n        },\n        __self: this\n      }, React.createElement(Sidebar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 406\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"main-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 407\n        },\n        __self: this\n      }, React.createElement(Navbar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 408\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"header bg-gradient-primary pb-8 pt-5 pt-md-8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 411\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container-fluid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 412\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"header-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 413\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        className: \"headline\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 414\n        },\n        __self: this\n      }, \"All Available Plans\")), React.createElement(Link, {\n        to: \"/tools\",\n        className: \"btn btn-info btn-lg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 416\n        },\n        __self: this\n      }, \"Other Tools\"))), React.createElement(\"div\", {\n        className: \"container-fluid mt--7\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 419\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 420\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 421\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card shadow\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 422\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card-header bg-transparent\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 423\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        className: \"mb-0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 424\n        },\n        __self: this\n      }, \"Plans\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 425\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"text-danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 425\n        },\n        __self: this\n      }, \"Red = Deactivated\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 425\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"text-success\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 425\n        },\n        __self: this\n      }, \"Green = Activated\"))), React.createElement(\"div\", {\n        className: \"margin\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 427\n        },\n        __self: this\n      }, this.state.message ? React.createElement(\"div\", {\n        className: \"alert alert-danger\",\n        role: \"alert\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 429\n        },\n        __self: this\n      }, this.state.message) : ''), React.createElement(\"img\", {\n        src: Loader,\n        className: !this.state.isLoading ? \"hideBox\" : \"\",\n        alt: \"Loader\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 434\n        },\n        __self: this\n      }), React.createElement(EditPlan, {\n        modalShow: this.state.openModal,\n        closeModal: this.closeModal,\n        plan: this.state.updatePlan,\n        onChange: this.onUpdateChanges,\n        onSubmit: this.updatePlan,\n        all_exams: this.state.all_exams,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 437\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: this.state.isLoading ? \"card-body hideBox\" : \"card-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 446\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row icon-examples\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 447\n        },\n        __self: this\n      }, this.state.plans.map(function (plan, index) {\n        return React.createElement(\"div\", {\n          className: \"col-lg-4 box-shadow\",\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 451\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"card shadow border-0\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 452\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"card-body py-5\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 453\n          },\n          __self: this\n        }, React.createElement(\"h2\", {\n          className: plan.is_active ? \"text-success text-uppercase\" : \"text-danger text-uppercase\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 455\n          },\n          __self: this\n        }, plan.plan_name), React.createElement(\"h6\", {\n          className: plan.is_active ? \"text-success text-uppercase\" : \"text-danger text-uppercase\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 456\n          },\n          __self: this\n        }, \"(\", plan.alternative_name, \")\"), React.createElement(\"hr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 457\n          },\n          __self: this\n        }), React.createElement(\"h2\", {\n          className: \"text\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 458\n          },\n          __self: this\n        }, \"\\u20B9 \", plan.price, \" for \", plan.validity, \" Days\"), React.createElement(\"hr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 459\n          },\n          __self: this\n        }), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 460\n          },\n          __self: this\n        }, plan.description), React.createElement(\"hr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 461\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 462\n          },\n          __self: this\n        }, _this4.state.plans[index].exams.map(function (exam, sub_index) {\n          return React.createElement(\"span\", {\n            className: plan.is_active ? \"badge badge-pill badge-success\" : \"badge badge-pill badge-danger\",\n            key: sub_index,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 465\n            },\n            __self: this\n          }, exam.exam_name);\n        })), React.createElement(\"hr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 471\n          },\n          __self: this\n        }), React.createElement(\"button\", {\n          type: \"button\",\n          className: \"btn btn-primary btn-sm delete-btn\",\n          onClick: function onClick(event, id) {\n            return _this4.openModal(event, index);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 472\n          },\n          __self: this\n        }, \"Edit\"))));\n      }), React.createElement(\"div\", {\n        className: \"col-lg-4 box-shadow\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 482\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card shadow border-0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 483\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card-body py-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 484\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: function onSubmit(event) {\n          return _this4.addNewPlan(event);\n        },\n        ref: \"form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 485\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 486\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-group col-lg-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 487\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        required: true,\n        className: \"form-control form-control-alternative\",\n        id: \"plan_name\",\n        name: \"plan_name\",\n        value: this.state.plan_name,\n        onChange: function onChange(e) {\n          return _this4.updateValues(e);\n        },\n        placeholder: \"Plan Name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 488\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group col-lg-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 499\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        required: true,\n        className: \"form-control form-control-alternative\",\n        id: \"alternative_name\",\n        name: \"alternative_name\",\n        value: this.state.alternative_name,\n        onChange: function onChange(e) {\n          return _this4.updateValues(e);\n        },\n        placeholder: \"Alternative Name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 500\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group col-lg-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 511\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        required: true,\n        className: \"form-control form-control-alternative\",\n        id: \"price\",\n        name: \"price\",\n        value: this.state.price,\n        onChange: function onChange(e) {\n          return _this4.updateValues(e);\n        },\n        placeholder: \"Price\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 512\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group col-lg-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 523\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"number\",\n        required: true,\n        className: \"form-control form-control-alternative\",\n        id: \"validity\",\n        name: \"validity\",\n        value: this.state.validity,\n        onChange: function onChange(e) {\n          return _this4.updateValues(e);\n        },\n        placeholder: \"Validity(In Days)\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 524\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group col-lg-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 535\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        required: true,\n        className: \"form-control form-control-alternative\",\n        id: \"description\",\n        name: \"description\",\n        value: this.state.description,\n        onChange: function onChange(e) {\n          return _this4.updateValues(e);\n        },\n        placeholder: \"Description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 536\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group col-lg-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 547\n        },\n        __self: this\n      }, React.createElement(\"select\", {\n        className: \"form-control form-control-alternative\",\n        name: \"exams\",\n        required: true,\n        multiple: true,\n        onChange: function onChange(e) {\n          return _this4.newPlanExams(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 548\n        },\n        __self: this\n      }, this.state.all_exams.map(function (exam, index) {\n        return React.createElement(\"option\", {\n          value: exam.id,\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 551\n          },\n          __self: this\n        }, exam.exam_name);\n      }))), React.createElement(\"div\", {\n        className: \"form-group col-lg-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 556\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"submit\",\n        className: \"btn btn-primary btn-sm\",\n        value: \"Add Now\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 557\n        },\n        __self: this\n      })))))))))))), React.createElement(Footer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 578\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return Plans;\n}(Component);\n\n;\nexport default Plans;","map":{"version":3,"sources":["/Users/Jarvis/Desktop/projects/examsnu/educator/src/components/Tools/Plans.jsx"],"names":["React","Component","Redirect","BASE_URL","Footer","Sidebar","Navbar","Link","Loader","EditPlan","props","modalShow","closeModal","e","id","onSubmit","plan","plan_name","onChange","alternative_name","price","validity","description","all_exams","map","exam","index","exam_name","is_active","is_deleted","Plans","updateValues","setState","target","name","value","newPlanExams","plan_exams","slice","call","selectedOptions","o","addNewPlan","event","isLoading","preventDefault","formData","FormData","planDet","entries","entry","state","isAuthenticated","fetch","method","headers","Authorization","sessionStorage","getItem","body","JSON","stringify","then","response","ok","Error","status","json","responseJson","plans","catch","error","message","refs","form","reset","openModal","updatePlan","onUpdateChanges","updatedPlanExams","exams","i","length","push","profile","parse","exam_category","subjects","subject_name","bind","document","title","examsJson","sub_index"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {Redirect} from 'react-router-dom';\n\nimport {BASE_URL} from '../../services/BaseUrl'\nimport Footer from '../../layouts/Footer'\nimport Sidebar from '../../layouts/Sidebar'\nimport Navbar from '../../layouts/Navbar'\nimport {Link} from 'react-router-dom'\nimport Loader from '../../assets/img/loading.gif'\n\n\nclass EditPlan extends Component{\n    render(){\n        return(\n            <div className={this.props.modalShow ? \"modal fade modelBox show\" : \"modal fade modelBox hideModal\"} role=\"dialog\" aria-labelledby=\"exampleModalLabel\">\n                <div className=\"modal-dialog modal-dialog-centered\" role=\"document\">\n                    <div className=\"modal-content\">\n                        <div className=\"modal-header\">\n                            <h5 className=\"modal-title\">Edit Plan</h5>\n                            <button type=\"button\" className=\"close\" aria-label=\"Close\">\n                                <span aria-hidden=\"true\" onClick={this.props.closeModal}>×</span>\n                            </button>\n                        </div>\n                        <div className=\"modal-body\">\n                            <form onSubmit={(e, id) => this.props.onSubmit(e, this.props.plan.id)}>\n                                <div className=\"row\">\n                                    <div className=\"form-group col-lg-12\">\n                                        <label>Plan Name</label>\n                                        <input\n                                            type=\"text\"\n                                            required={true}\n                                            className=\"form-control form-control-alternative\"\n                                            id=\"plan_name\"\n                                            name=\"plan_name\"\n                                            value={this.props.plan.plan_name}\n                                            placeholder=\"Plan Name\"\n                                            onChange={this.props.onChange}\n                                        />\n                                    </div>\n                                    <div className=\"form-group col-lg-12\">\n                                        <label>Alternative Name</label>\n                                        <input\n                                            type=\"text\"\n                                            required={true}\n                                            className=\"form-control form-control-alternative\"\n                                            id=\"alternative_name\"\n                                            name=\"alternative_name\"\n                                            value={this.props.plan.alternative_name}\n                                            placeholder=\"Alternative Name\"\n                                            onChange={this.props.onChange}\n                                        />\n                                    </div>\n                                    <div className=\"form-group col-lg-12\">\n                                        <label>Price</label>\n                                        <input\n                                            type=\"text\"\n                                            required={true}\n                                            className=\"form-control form-control-alternative\"\n                                            id=\"price\"\n                                            name=\"price\"\n                                            value={this.props.plan.price}\n                                            placeholder=\"Price\"\n                                            onChange={this.props.onChange}\n                                        />\n                                    </div>\n                                    <div className=\"form-group col-lg-12\">\n                                        <label>Validity(In Days)</label>\n                                        <input\n                                            type=\"number\"\n                                            required={true}\n                                            className=\"form-control form-control-alternative\"\n                                            id=\"validity\"\n                                            name=\"validity\"\n                                            value={this.props.plan.validity}\n                                            placeholder=\"Validity\"\n                                            onChange={this.props.onChange}\n                                        />\n                                    </div>\n                                    <div className=\"form-group col-lg-12\">\n                                        <label>Description</label>\n                                        <input\n                                            type=\"text\"\n                                            required={true}\n                                            className=\"form-control form-control-alternative\"\n                                            id=\"description\"\n                                            name=\"description\"\n                                            value={this.props.plan.description}\n                                            placeholder=\"Description\"\n                                            onChange={this.props.onChange}\n                                        />\n                                    </div>\n                                    <div className=\"form-group col-lg-12\">\n                                        <label>Exams(Left Unchanged if need no changes)</label>\n                                        <select className=\"form-control form-control-alternative\" name=\"exams\" required={true} multiple={true} onChange={this.props.onChange}>\n                                            {\n                                                this.props.all_exams.map((exam, index)=>(\n                                                    <option value={exam.id} key={index} selected={true}>{exam.exam_name}</option>\n                                                ))\n                                            }\n                                        </select>\n                                    </div>\n                                    <div className=\"form-group col-lg-12\">\n                                        <label>Is Active?</label>\n                                        <select className=\"form-control form-control-alternative\" name=\"is_active\" onChange={this.props.onChange}>\n                                            <option value={this.props.plan.is_active ? 'true' : 'false'}>{this.props.plan.is_active ? \"Yes\" : \"No\"}</option>\n                                            <option value='true'>Yes</option>\n                                            <option value='false'>No</option>\n                                        </select>\n                                    </div>\n                                    <div className=\"form-group col-lg-12\">\n                                        <label>Is Deleted?</label>\n                                        <select className=\"form-control form-control-alternative\" name=\"is_deleted\" onChange={this.props.onChange}>\n                                            <option value={this.props.plan.is_deleted ? 'true' : 'false'}>{this.props.plan.is_deleted ? \"Yes\" : \"No\"}</option>\n                                            <option value='true'>Yes</option>\n                                            <option value='false'>No</option>\n                                        </select>\n                                    </div>\n                                    <div className=\"form-group col-lg-12\">\n                                        <button className=\"btn btn-primary\" value=\"Update\">Update</button>\n                                    </div>\n                                </div>\n                            </form>\n                        </div>\n                        {/*<div className=\"modal-footer\">*/}\n                            {/*<button type=\"button\" className=\"btn btn-secondary\" onClick={this.props.closeModal}>Close</button>*/}\n                        {/*</div>*/}\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\n\nclass Plans extends Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            isAuthenticated: !!sessionStorage.getItem('examsnuDashToken'),\n            profile: JSON.parse(sessionStorage.getItem('examsnuDashProfile')),\n\n            all_exams : [\n                { id: 0, exam_category: \"\", subjects: [{ id: 0, subject_name: \" \", alternative_name: \" \", description:\" \" },],exam_name:\"\",alternative_name:\"\",is_deleted:false },\n            ],\n            plans:[\n                { id: 0, plan_name: \"\", alternative_name: \"\",price:\"\",description:\"\",exams:[{ id: 0, exam_category: \"\", subjects: [{ id: 0, subject_name: \" \", alternative_name: \" \", description:\" \" },],exam_name:\"\",alternative_name:\"\" }],validity:\"\",is_deleted:false,is_active:false},\n            ],\n\n            isLoading:true,\n            error:false,\n            message:'',\n            openModal:false,\n\n            plan_name:'',\n            alternative_name:'',\n            price:'',\n            description:'',\n            plan_exams:'',\n            validity:'',\n\n            updatePlan:'',\n            updatedPlanExams:'',\n        };\n\n        this.updateValues = this.updateValues.bind(this);\n        this.newPlanExams = this.newPlanExams.bind(this);\n\n        this.addNewPlan = this.addNewPlan.bind(this);\n        this.updatePlan = this.updatePlan.bind(this);\n        this.openModal = this.openModal.bind(this);\n        this.closeModal = this.closeModal.bind(this);\n        this.onUpdateChanges = this.onUpdateChanges.bind(this);\n    }\n\n    componentDidMount() {\n        document.title = \"All Available Plans - EXAMSNU.IN\";\n        if (this.state.isAuthenticated) {\n            fetch(`${BASE_URL}plans/`, {\n                method: \"GET\",\n                headers: {\n                    Authorization: `Token ${sessionStorage.getItem('examsnuDashToken')}`\n                },\n            })\n                .then((response) => {\n                    if(!response.ok){\n                        throw new Error(response.status)\n                    }else{\n                        return response.json();\n                    }\n                })\n                .then((responseJson) => {\n                    // This is for Calling all available exam categories\n\n                    fetch(`${BASE_URL}exams/`, {\n                        method: \"GET\",\n                        headers: {\n                            Authorization: `Token ${sessionStorage.getItem('examsnuDashToken')}`\n                        },\n                    })\n                        .then((response) => {\n                            if(!response.ok){\n                                throw new Error(response.status)\n                            }else{\n                                return response.json();\n                            }\n                        })\n                        .then((examsJson) => {\n                            this.setState({\n                                all_exams:examsJson,\n                                plans:responseJson,\n                                isLoading:false,\n                            })\n                        })\n                        .catch((error) => {\n                            this.setState({\n                                error:true,\n                                isLoading:false,\n                                message:'Some Error Occurred',\n                            })\n                        });\n\n\n                })\n                .catch((error) => {\n                    this.setState({\n                        error:true,\n                        isLoading:false,\n                        message:'Some Error Occurred',\n                    })\n                });\n        }\n    };\n\n    updateValues = (e) => {\n        this.setState({\n            [e.target.name]:e.target.value,\n        })\n    };\n\n    newPlanExams = (e) => {\n        this.setState({\n            plan_exams: [].slice.call(e.target.selectedOptions).map(o => {\n                return o.value;\n            })\n        });\n    };\n\n\n    addNewPlan = (event) => {\n        this.setState({\n            isLoading:true,\n        });\n        event.preventDefault();\n\n        const formData = new FormData(event.target);\n        const planDet = {};\n\n        for (let entry of formData.entries()) {\n            planDet[entry[0]] = entry[1]\n        }\n        planDet['exam_list'] = this.state.plan_exams;\n\n        if (this.state.isAuthenticated) {\n            fetch(`${BASE_URL}plans/`, {\n                method: \"POST\",\n                headers: {\n                    Authorization: `Token ${sessionStorage.getItem('examsnuDashToken')}`\n                },\n                body:JSON.stringify(planDet),\n            })\n                .then((response) => {\n                    if(!response.ok){\n                        throw new Error(response.status)\n                    }else{\n                        return response.json();\n                    }\n                })\n                .then((responseJson) => {\n                    this.setState({\n                        plans:responseJson,\n                        isLoading:false,\n                    })\n                })\n                .catch((error) => {\n                    this.setState({\n                        error:true,\n                        isLoading:false,\n                        message:'Some Error Occurred',\n                    })\n                });\n        };\n        this.setState({\n            plan_name:'',\n            alternative_name:'',\n            price:'',\n            description:'',\n            plan_exams:'',\n            validity:'',\n        });\n\n        this.refs.form.reset();\n        return false;\n    };\n\n\n    openModal = (event, id) => {\n        this.setState({\n            openModal : !this.state.openModal,\n            updatePlan: this.state.plans[id],\n        });\n    };\n\n    closeModal = (event) => {\n        this.setState({\n            openModal : !this.state.openModal,\n        });\n    };\n\n    onUpdateChanges = (e) => {\n        e.preventDefault();\n\n        if(e.target.name === 'exams'){\n            this.setState({\n                updatedPlanExams: [].slice.call(e.target.selectedOptions).map(o => {\n                    return o.value;\n                })\n            });\n        }else{\n            this.setState({\n                updatePlan: {\n                    ...this.state.updatePlan, [e.target.name]: e.target.value\n                }\n            });\n        }\n    };\n\n    updatePlan = (e, id) => {\n        this.setState({\n            isLoading:true,\n        });\n        e.preventDefault();\n\n        const formData = new FormData(e.target);\n        const planDet = {};\n\n        for (let entry of formData.entries()) {\n            planDet[entry[0]] = entry[1]\n        }\n\n        let exams = [];\n\n        if(!this.state.updatedPlanExams){\n            for(let i=0;i<this.state.updatePlan.exams.length;i++){\n                exams.push(this.state.updatePlan.exams[i].id)\n            }\n        }else{\n            exams = this.state.updatedPlanExams;\n        }\n\n        planDet['plan_id'] = id;\n        planDet['exams'] = exams;\n\n        if (this.state.isAuthenticated) {\n            fetch(`${BASE_URL}plans/`, {\n                method: \"PUT\",\n                headers: {\n                    Authorization: `Token ${sessionStorage.getItem('examsnuDashToken')}`\n                },\n                body:JSON.stringify(planDet),\n            })\n                .then((response) => {\n                    if(!response.ok){\n                        throw new Error(response.status)\n                    }else{\n                        return response.json();\n                    }\n                })\n                .then((responseJson) => {\n                    this.setState({\n                        plans:responseJson,\n                        isLoading:false,\n                        openModal:false,\n                        updatePlan:'',\n                        updatedPlanExams:'',\n                    })\n                })\n                .catch((error) => {\n                    this.setState({\n                        error:true,\n                        isLoading:false,\n                        openModal:false,\n                        message:'Some Error Occurred',\n                    })\n                });\n        }\n\n        return false;\n    };\n\n    render(){\n        if(!this.state.isAuthenticated){\n            return(<Redirect to=\"/login\"/>);\n        }\n        return(\n            <div>\n                <Sidebar/>\n                <div className=\"main-content\">\n                    <Navbar/>\n\n\n                    <div className=\"header bg-gradient-primary pb-8 pt-5 pt-md-8\">\n                        <div className=\"container-fluid\">\n                            <div className=\"header-body\">\n                                <h2 className=\"headline\">All Available Plans</h2>\n                            </div>\n                            <Link to={`/tools`} className=\"btn btn-info btn-lg\">Other Tools</Link>\n                        </div>\n                    </div>\n                    <div className=\"container-fluid mt--7\">\n                        <div className=\"row\">\n                            <div className=\"col\">\n                                <div className=\"card shadow\">\n                                    <div className=\"card-header bg-transparent\">\n                                        <h3 className=\"mb-0\">Plans</h3>\n                                        <p><span className=\"text-danger\">Red = Deactivated</span><br/><span className=\"text-success\">Green = Activated</span></p>\n                                    </div>\n                                    <div className=\"margin\">\n                                        {this.state.message ? (\n                                            <div className=\"alert alert-danger\" role=\"alert\">\n                                                {this.state.message}\n                                            </div>\n                                        ) : ''}\n                                    </div>\n                                    <img src={Loader} className={!this.state.isLoading ? \"hideBox\" : \"\"} alt=\"Loader\"/>\n\n                                    {/*Modal for Updating Plan Details*/}\n                                    <EditPlan\n                                        modalShow={this.state.openModal}\n                                        closeModal={this.closeModal}\n                                        plan={this.state.updatePlan}\n                                        onChange={this.onUpdateChanges}\n                                        onSubmit={this.updatePlan}\n                                        all_exams={this.state.all_exams}\n                                    />\n\n                                    <div  className={this.state.isLoading ? \"card-body hideBox\" : \"card-body\"}>\n                                        <div className=\"row icon-examples\">\n                                            {\n                                                this.state.plans.map((plan, index) => (\n\n                                                        <div className=\"col-lg-4 box-shadow\" key={index}>\n                                                            <div className=\"card shadow border-0\">\n                                                                <div className=\"card-body py-5\">\n\n                                                                    <h2 className={plan.is_active ? \"text-success text-uppercase\" : \"text-danger text-uppercase\"}>{plan.plan_name}</h2>\n                                                                    <h6 className={plan.is_active ? \"text-success text-uppercase\" : \"text-danger text-uppercase\"}>({plan.alternative_name})</h6>\n                                                                    <hr/>\n                                                                    <h2 className=\"text\">&#8377; {plan.price} for {plan.validity} Days</h2>\n                                                                    <hr/>\n                                                                    <p>{plan.description}</p>\n                                                                    <hr/>\n                                                                    <div>\n                                                                        {\n                                                                            this.state.plans[index].exams.map((exam, sub_index)=>(\n                                                                                <span className={plan.is_active ? \"badge badge-pill badge-success\" : \"badge badge-pill badge-danger\"} key={sub_index}>\n                                                                                {exam.exam_name}\n                                                                            </span>\n                                                                            ))\n                                                                        }\n                                                                    </div>\n                                                                    <hr/>\n                                                                    <button type=\"button\" className=\"btn btn-primary btn-sm delete-btn\" onClick={(event, id) => this.openModal(event, index)}>Edit</button>\n\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                    )\n                                                )\n                                            }\n\n\n                                            <div className=\"col-lg-4 box-shadow\">\n                                                <div className=\"card shadow border-0\">\n                                                    <div className=\"card-body py-5\">\n                                                        <form onSubmit={(event) => this.addNewPlan(event)} ref=\"form\">\n                                                            <div className=\"row\">\n                                                                <div className=\"form-group col-lg-12\">\n                                                                    <input\n                                                                        type=\"text\"\n                                                                        required={true}\n                                                                        className=\"form-control form-control-alternative\"\n                                                                        id=\"plan_name\"\n                                                                        name=\"plan_name\"\n                                                                        value={this.state.plan_name}\n                                                                        onChange={(e) => this.updateValues(e)}\n                                                                        placeholder=\"Plan Name\"\n                                                                    />\n                                                                </div>\n                                                                <div className=\"form-group col-lg-12\">\n                                                                    <input\n                                                                        type=\"text\"\n                                                                        required={true}\n                                                                        className=\"form-control form-control-alternative\"\n                                                                        id=\"alternative_name\"\n                                                                        name=\"alternative_name\"\n                                                                        value={this.state.alternative_name}\n                                                                        onChange={(e) => this.updateValues(e)}\n                                                                        placeholder=\"Alternative Name\"\n                                                                    />\n                                                                </div>\n                                                                <div className=\"form-group col-lg-12\">\n                                                                    <input\n                                                                        type=\"text\"\n                                                                        required={true}\n                                                                        className=\"form-control form-control-alternative\"\n                                                                        id=\"price\"\n                                                                        name=\"price\"\n                                                                        value={this.state.price}\n                                                                        onChange={(e) => this.updateValues(e)}\n                                                                        placeholder=\"Price\"\n                                                                    />\n                                                                </div>\n                                                                <div className=\"form-group col-lg-12\">\n                                                                    <input\n                                                                        type=\"number\"\n                                                                        required={true}\n                                                                        className=\"form-control form-control-alternative\"\n                                                                        id=\"validity\"\n                                                                        name=\"validity\"\n                                                                        value={this.state.validity}\n                                                                        onChange={(e) => this.updateValues(e)}\n                                                                        placeholder=\"Validity(In Days)\"\n                                                                    />\n                                                                </div>\n                                                                <div className=\"form-group col-lg-12\">\n                                                                    <input\n                                                                        type=\"text\"\n                                                                        required={true}\n                                                                        className=\"form-control form-control-alternative\"\n                                                                        id=\"description\"\n                                                                        name=\"description\"\n                                                                        value={this.state.description}\n                                                                        onChange={(e) => this.updateValues(e)}\n                                                                        placeholder=\"Description\"\n                                                                    />\n                                                                </div>\n                                                                <div className=\"form-group col-lg-12\">\n                                                                    <select className=\"form-control form-control-alternative\" name=\"exams\" required={true} multiple={true} onChange={(e) => this.newPlanExams(e)}>\n                                                                        {\n                                                                            this.state.all_exams.map((exam, index)=>(\n                                                                                <option value={exam.id} key={index}>{exam.exam_name}</option>\n                                                                            ))\n                                                                        }\n                                                                    </select>\n                                                                </div>\n                                                                <div className=\"form-group col-lg-12\">\n                                                                    <input\n                                                                        type=\"submit\"\n                                                                        className=\"btn btn-primary btn-sm\"\n                                                                        value=\"Add Now\"\n                                                                    />\n                                                                </div>\n                                                            </div>\n                                                        </form>\n                                                    </div>\n                                                </div>\n                                            </div>\n\n\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n\n\n                        {/*Footer*/}\n                        <Footer />\n                    </div>\n                </div>\n            </div>\n        )\n    }\n};\n\nexport default Plans;\n\n"]},"metadata":{},"sourceType":"module"}