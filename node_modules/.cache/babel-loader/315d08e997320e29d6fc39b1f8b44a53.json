{"ast":null,"code":"import _defineProperty from \"/Users/Jarvis/Desktop/projects/examsnu/educator/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/Jarvis/Desktop/projects/examsnu/educator/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/Jarvis/Desktop/projects/examsnu/educator/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Jarvis/Desktop/projects/examsnu/educator/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Jarvis/Desktop/projects/examsnu/educator/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Jarvis/Desktop/projects/examsnu/educator/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Jarvis/Desktop/projects/examsnu/educator/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/Jarvis/Desktop/projects/examsnu/educator/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/Jarvis/Desktop/projects/examsnu/educator/src/components/Products/Quizzes/viewQuiz.jsx\";\nimport React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { BASE_URL } from '../../../services/BaseUrl';\nimport Footer from '../../../layouts/Footer';\nimport Sidebar from '../../../layouts/Sidebar';\nimport Navbar from '../../../layouts/Navbar';\nimport { Link } from 'react-router-dom';\nimport Loader from '../../../assets/img/loading.gif';\n\nvar viewQuiz =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(viewQuiz, _Component);\n\n  function viewQuiz(props) {\n    var _this;\n\n    _classCallCheck(this, viewQuiz);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(viewQuiz).call(this, props));\n\n    _this.onChange = function (e) {\n      e.preventDefault();\n\n      if (e.target.name === 'exam') {\n        _this.setState({\n          quiz_exams: [].slice.call(e.target.selectedOptions).map(function (o) {\n            return o.value;\n          })\n        });\n      } else {\n        _this.setState({\n          quiz: _objectSpread({}, _this.state.quiz, _defineProperty({}, e.target.name, e.target.value))\n        });\n      }\n    };\n\n    _this.updateQuiz = function (e, quiz_id) {\n      _this.setState({\n        isLoading: true\n      });\n\n      e.preventDefault();\n      var formData = new FormData(e.target);\n      var quizDet = {};\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = formData.entries()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var entry = _step.value;\n          quizDet[entry[0]] = entry[1];\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      if (_this.state.quiz_exams.length > 0) {\n        quizDet['exam'] = _this.state.quiz_exams;\n      } else {\n        quizDet['exam'] = _this.state.quiz.exam;\n      }\n\n      quizDet['quiz_id'] = quiz_id;\n      fetch(\"\".concat(BASE_URL, \"quiz/\"), {\n        method: \"PUT\",\n        headers: {\n          Authorization: \"Token \".concat(sessionStorage.getItem('examsnuDashToken'))\n        },\n        body: JSON.stringify(quizDet)\n      }).then(function (response) {\n        if (!response.ok) {\n          throw new Error(response.status);\n        } else {\n          return response.json();\n        }\n      }).then(function (responseJson) {\n        _this.setState({\n          isLoading: false,\n          quiz: responseJson,\n          message: 'Updated Successfully'\n        });\n      }).catch(function (error) {\n        _this.setState({\n          error: true,\n          isLoading: false,\n          openModal: false,\n          message: 'Some Error Occurred'\n        });\n      });\n      console.log(JSON.stringify(quizDet));\n      return false;\n    };\n\n    _this.state = {\n      isAuthenticated: !!sessionStorage.getItem('examsnuDashToken'),\n      profile: JSON.parse(sessionStorage.getItem('examsnuDashProfile')),\n      isLoading: true,\n      error: false,\n      message: '',\n      quiz: [{\n        id: 1,\n        exam: \"Air Force Common Admission Test\",\n        exam_id: 1,\n        videos: [{\n          id: 1,\n          title: \"Maths - 1\"\n        }],\n        created_by: \"Hitesh Yadav\",\n        created_by_id: 1,\n        title: \"Video - 1\",\n        alt_title_video: \"V1\",\n        is_active: true,\n        active_on: \"2019-04-04T00:00:00+05:30\",\n        is_deleted: false\n      }],\n      quiz_exams: [],\n      all_exams: [{\n        id: 0,\n        exam_category: \"\",\n        subjects: [{\n          id: 0,\n          subject_name: \" \",\n          alternative_name: \" \",\n          description: \" \"\n        }],\n        exam_name: \"\",\n        alternative_name: \"\",\n        is_deleted: \"\"\n      }]\n    };\n    _this.onChange = _this.onChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.updateQuiz = _this.updateQuiz.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(viewQuiz, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      document.title = \"View Quiz Details - examsnu.in\";\n\n      if (this.state.isAuthenticated) {\n        fetch(\"\".concat(BASE_URL, \"quiz/?id=\").concat(this.props.match.params.quiz_id), {\n          method: \"GET\",\n          headers: {\n            Authorization: \"Token \".concat(sessionStorage.getItem('examsnuDashToken'))\n          }\n        }).then(function (response) {\n          if (!response.ok) {\n            throw new Error(response.status);\n          } else {\n            return response.json();\n          }\n        }).then(function (responseJson) {\n          _this2.setState({\n            quiz: responseJson,\n            isLoading: false\n          });\n        }).catch(function (error) {\n          _this2.setState({\n            error: true,\n            isLoading: false,\n            message: 'Some Error Occurred'\n          });\n        });\n        fetch(\"\".concat(BASE_URL, \"exams/\"), {\n          method: \"GET\",\n          headers: {\n            Authorization: \"Token \".concat(sessionStorage.getItem('examsnuDashToken'))\n          }\n        }).then(function (response) {\n          if (!response.ok) {\n            throw new Error(response.status);\n          } else {\n            return response.json();\n          }\n        }).then(function (responseJson) {\n          _this2.setState({\n            all_exams: responseJson,\n            isLoading: false\n          });\n        }).catch(function (error) {\n          _this2.setState({\n            error: true,\n            isLoading: false,\n            message: 'Some Error Occurred'\n          });\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      if (!this.state.isAuthenticated) {\n        return React.createElement(Redirect, {\n          to: \"/login\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 166\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, React.createElement(Sidebar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"main-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, React.createElement(Navbar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"header bg-gradient-primary pb-8 pt-5 pt-md-8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container-fluid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"header-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        className: \"headline\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, \"View Quiz\")), React.createElement(Link, {\n        to: \"/product/quizzes/\",\n        className: \"btn btn-success btn-lg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, \"Back to Quiz Collection\"), React.createElement(Link, {\n        to: \"/collection/questions\",\n        className: \"btn btn-info btn-lg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }, \"Questions Collection\"))), React.createElement(\"div\", {\n        className: \"container-fluid mt--7\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row mt-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card shadow\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card-header bg-transparent\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        className: \"mb-0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, \"View Quiz\"), React.createElement(Link, {\n        to: \"/product/quiz/edit/\".concat(this.props.match.params.quiz_id),\n        className: \"btn btn-primary btn-sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, \"Add/Delete Questions\")), React.createElement(\"div\", {\n        className: \"margin\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }, this.state.message && this.state.error ? React.createElement(\"div\", {\n        className: \"alert alert-danger\",\n        role: \"alert\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }, this.state.message) : this.state.message && !this.state.error ? React.createElement(\"div\", {\n        className: \"alert alert-info\",\n        role: \"alert\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }, this.state.message) : ''), React.createElement(\"div\", {\n        className: \"loader-justify\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: Loader,\n        className: !this.state.isLoading ? \"hideBox\" : \"loader\",\n        alt: \"Loader\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: this.state.isLoading ? \"card-body hideBox\" : \"card-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row icon-examples\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-lg-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: function onSubmit(event, id) {\n          return _this3.updateQuiz(event, _this3.props.match.params.quiz_id);\n        },\n        ref: \"form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-group col-lg-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      }, \"Title of the Quiz(E.g. SSC - Aptitude)\"), React.createElement(\"input\", {\n        type: \"text\",\n        required: true,\n        className: \"form-control form-control-alternative\",\n        id: \"title\",\n        name: \"title\",\n        value: this.state.quiz.title,\n        onChange: function onChange(e) {\n          return _this3.onChange(e);\n        },\n        placeholder: \"Title for Notes Lec\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group col-lg-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      }, \"Alternative Title of the Notes Lecture's(E.g. SSC - Aptitude)\"), React.createElement(\"input\", {\n        type: \"text\",\n        required: true,\n        className: \"form-control form-control-alternative\",\n        id: \"alt_title_notes\",\n        name: \"alt_title_notes\",\n        value: this.state.notes.alt_title_notes,\n        onChange: function onChange(e) {\n          return _this3.onChange(e);\n        },\n        placeholder: \"Alternative Title for Notes Lec\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group col-lg-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254\n        },\n        __self: this\n      }, \"Is Active?\"), React.createElement(\"select\", {\n        className: \"form-control form-control-alternative\",\n        name: \"is_active\",\n        onChange: function onChange(e) {\n          return _this3.onChange(e);\n        },\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: this.state.notes.is_active ? \"true\" : \"false\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256\n        },\n        __self: this\n      }, this.state.notes.is_active ? \"Yes\" : \"No\"), React.createElement(\"option\", {\n        value: \"true\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257\n        },\n        __self: this\n      }, \"Yes\"), React.createElement(\"option\", {\n        value: \"false\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258\n        },\n        __self: this\n      }, \"No\"))), React.createElement(\"div\", {\n        className: \"form-group col-lg-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261\n        },\n        __self: this\n      }, React.createElement(\"lable\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262\n        },\n        __self: this\n      }, \"Will Active On(If Unactive) (\", this.state.notes.active_on, \")\"), React.createElement(\"input\", {\n        type: \"datetime-local\",\n        required: true,\n        className: \"form-control form-control-alternative\",\n        name: \"active_on\",\n        id: \"active_on\",\n        value: this.state.notes.active_on,\n        onChange: function onChange(e) {\n          return _this3.onChange(e);\n        },\n        placeholder: \"Will be available on?\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group col-lg-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276\n        },\n        __self: this\n      }, \"Exam(To which Lectures related)\"), React.createElement(\"select\", {\n        className: \"form-control form-control-alternative\",\n        name: \"exam\",\n        onChange: function onChange(e) {\n          return _this3.onChange(e);\n        },\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: this.state.notes.exam_id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278\n        },\n        __self: this\n      }, this.state.notes.exam), this.state.all_exams.map(function (exam, index) {\n        return React.createElement(\"option\", {\n          value: exam.id,\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 281\n          },\n          __self: this\n        }, exam.exam_name);\n      }))), React.createElement(\"div\", {\n        className: \"form-group col-lg-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287\n        },\n        __self: this\n      }, \"Is Deleted?\"), React.createElement(\"select\", {\n        className: \"form-control form-control-alternative\",\n        name: \"is_deleted\",\n        onChange: function onChange(e) {\n          return _this3.onChange(e);\n        },\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: this.state.notes.is_deleted ? \"true\" : \"false\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289\n        },\n        __self: this\n      }, this.state.notes.is_deleted ? \"Yes\" : \"No\"), React.createElement(\"option\", {\n        value: \"true\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290\n        },\n        __self: this\n      }, \"Yes\"), React.createElement(\"option\", {\n        value: \"false\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291\n        },\n        __self: this\n      }, \"No\"))), React.createElement(\"div\", {\n        className: \"form-group col-lg-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 294\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"submit\",\n        className: \"btn btn-primary btn-lg\",\n        value: \"Update Now\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295\n        },\n        __self: this\n      })))))))))), React.createElement(Footer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 316\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return viewQuiz;\n}(Component);\n\n;\nexport default viewQuiz;","map":{"version":3,"sources":["/Users/Jarvis/Desktop/projects/examsnu/educator/src/components/Products/Quizzes/viewQuiz.jsx"],"names":["React","Component","Redirect","BASE_URL","Footer","Sidebar","Navbar","Link","Loader","viewQuiz","props","onChange","e","preventDefault","target","name","setState","quiz_exams","slice","call","selectedOptions","map","o","value","quiz","state","updateQuiz","quiz_id","isLoading","formData","FormData","quizDet","entries","entry","length","exam","fetch","method","headers","Authorization","sessionStorage","getItem","body","JSON","stringify","then","response","ok","Error","status","json","responseJson","message","catch","error","openModal","console","log","isAuthenticated","profile","parse","id","exam_id","videos","title","created_by","created_by_id","alt_title_video","is_active","active_on","is_deleted","all_exams","exam_category","subjects","subject_name","alternative_name","description","exam_name","bind","document","match","params","event","notes","alt_title_notes","index"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {Redirect} from 'react-router-dom';\n\nimport {BASE_URL} from '../../../services/BaseUrl';\nimport Footer from '../../../layouts/Footer';\nimport Sidebar from '../../../layouts/Sidebar';\nimport Navbar from '../../../layouts/Navbar';\nimport {Link} from 'react-router-dom';\nimport Loader from '../../../assets/img/loading.gif';\n\nclass viewQuiz extends Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            isAuthenticated: !!sessionStorage.getItem('examsnuDashToken'),\n            profile: JSON.parse(sessionStorage.getItem('examsnuDashProfile')),\n\n            isLoading:true,\n            error:false,\n            message:'',\n\n            quiz:[{id:1,exam:\"Air Force Common Admission Test\",exam_id:1,videos:[{id:1,title:\"Maths - 1\"}],created_by:\"Hitesh Yadav\",created_by_id:1,title:\"Video - 1\",alt_title_video:\"V1\",is_active:true,active_on:\"2019-04-04T00:00:00+05:30\",is_deleted:false}],\n            quiz_exams:[],\n\n            all_exams : [\n                { id: 0, exam_category: \"\", subjects: [{ id: 0, subject_name: \" \", alternative_name: \" \", description:\" \" },],exam_name:\"\",alternative_name:\"\",is_deleted:\"\" },\n            ],\n\n        };\n        this.onChange = this.onChange.bind(this);\n        this.updateQuiz = this.updateQuiz.bind(this);\n    }\n\n    componentDidMount() {\n        document.title = \"View Quiz Details - examsnu.in\";\n\n        if (this.state.isAuthenticated) {\n            fetch(`${BASE_URL}quiz/?id=${this.props.match.params.quiz_id}`, {\n                method: \"GET\",\n                headers: {\n                    Authorization: `Token ${sessionStorage.getItem('examsnuDashToken')}`\n                },\n            })\n                .then((response) => {\n                    if(!response.ok){\n                        throw new Error(response.status)\n                    }else{\n                        return response.json();\n                    }\n                })\n                .then((responseJson) => {\n                    this.setState({\n                        quiz:responseJson,\n                        isLoading:false,\n                    })\n                })\n                .catch((error) => {\n                    this.setState({\n                        error:true,\n                        isLoading:false,\n                        message:'Some Error Occurred',\n                    })\n                });\n\n            fetch(`${BASE_URL}exams/`, {\n                method: \"GET\",\n                headers: {\n                    Authorization: `Token ${sessionStorage.getItem('examsnuDashToken')}`\n                },\n            })\n                .then((response) => {\n                    if(!response.ok){\n                        throw new Error(response.status)\n                    }else{\n                        return response.json();\n                    }\n                })\n                .then((responseJson) => {\n                    this.setState({\n                        all_exams:responseJson,\n                        isLoading:false,\n                    })\n                })\n                .catch((error) => {\n                    this.setState({\n                        error:true,\n                        isLoading:false,\n                        message:'Some Error Occurred',\n                    })\n                });\n        }\n    };\n    onChange = (e) => {\n        e.preventDefault();\n\n        if(e.target.name === 'exam'){\n            this.setState({\n                quiz_exams: [].slice.call(e.target.selectedOptions).map(o => {\n                    return o.value;\n                })\n            });\n        }else{\n            this.setState({\n                quiz: {\n                    ...this.state.quiz, [e.target.name]: e.target.value\n                }\n            });\n        }\n    };\n    updateQuiz = (e, quiz_id) => {\n        this.setState({\n            isLoading:true,\n        });\n        e.preventDefault();\n\n        const formData = new FormData(e.target);\n        const quizDet = {};\n\n        for (let entry of formData.entries()) {\n            quizDet[entry[0]] = entry[1]\n        }\n\n        if(this.state.quiz_exams.length > 0){\n            quizDet['exam'] = this.state.quiz_exams;\n        }else{\n            quizDet['exam'] = this.state.quiz.exam;\n        }\n\n        quizDet['quiz_id'] = quiz_id;\n\n        fetch(`${BASE_URL}quiz/`, {\n            method: \"PUT\",\n            headers: {\n                Authorization: `Token ${sessionStorage.getItem('examsnuDashToken')}`\n            },\n            body:JSON.stringify(quizDet),\n        })\n            .then((response) => {\n                if(!response.ok){\n                    throw new Error(response.status)\n                }else{\n                    return response.json();\n                }\n            })\n            .then((responseJson) => {\n                this.setState({\n                    isLoading:false,\n                    quiz:responseJson,\n                    message:'Updated Successfully',\n                });\n            })\n            .catch((error) => {\n                this.setState({\n                    error:true,\n                    isLoading:false,\n                    openModal:false,\n                    message:'Some Error Occurred',\n                })\n            });\n        console.log(JSON.stringify(quizDet));\n        return false;\n    };\n\n    render(){\n        if(!this.state.isAuthenticated){\n            return(<Redirect to=\"/login\"/>);\n        }\n        return(\n            <div>\n                <Sidebar/>\n                <div className=\"main-content\">\n                    <Navbar/>\n\n\n                    <div className=\"header bg-gradient-primary pb-8 pt-5 pt-md-8\">\n                        <div className=\"container-fluid\">\n                            <div className=\"header-body\">\n                                <h2 className=\"headline\">View Quiz</h2>\n                            </div>\n                            <Link to={`/product/quizzes/`} className=\"btn btn-success btn-lg\">Back to Quiz Collection</Link>\n                            <Link to={`/collection/questions`} className=\"btn btn-info btn-lg\">Questions Collection</Link>\n                        </div>\n                    </div>\n                    <div className=\"container-fluid mt--7\">\n\n                        {/*Content Starts Here*/}\n\n                        <div className=\"row mt-5\">\n                            <div className=\"col\">\n                                <div className=\"card shadow\">\n                                    <div className=\"card-header bg-transparent\">\n                                        <h3 className=\"mb-0\">View Quiz</h3>\n                                        <Link to={`/product/quiz/edit/${this.props.match.params.quiz_id}`} className=\"btn btn-primary btn-sm\">Add/Delete Questions</Link>\n                                    </div>\n\n                                    {/*Warning Message*/}\n                                    <div className=\"margin\">\n                                        {this.state.message && this.state.error ? (\n                                            <div className=\"alert alert-danger\" role=\"alert\">\n                                                {this.state.message}\n                                            </div>\n                                        ) : (\n                                            this.state.message && !this.state.error ? (\n                                                <div className=\"alert alert-info\" role=\"alert\">\n                                                    {this.state.message}\n                                                </div>\n                                            ) : ''\n                                        )}\n                                    </div>\n\n                                    {/*Loader*/}\n                                    <div className=\"loader-justify\">\n                                        <img\n                                            src={Loader}\n                                            className={!this.state.isLoading ? \"hideBox\" : \"loader\"}\n                                            alt=\"Loader\"\n                                        />\n                                    </div>\n\n                                    <div  className={this.state.isLoading ? \"card-body hideBox\" : \"card-body\"}>\n                                        <div className=\"row icon-examples\">\n\n                                            {/*Form for adding Notes starts*/}\n                                            <div className=\"col-lg-12\">\n                                                <form onSubmit={(event, id) => this.updateQuiz(event, this.props.match.params.quiz_id)} ref=\"form\">\n                                                    <div className=\"row\">\n                                                        <div className=\"form-group col-lg-12\">\n                                                            <label>Title of the Quiz(E.g. SSC - Aptitude)</label>\n                                                            <input\n                                                                type=\"text\"\n                                                                required={true}\n                                                                className=\"form-control form-control-alternative\"\n                                                                id=\"title\"\n                                                                name=\"title\"\n                                                                value={this.state.quiz.title}\n                                                                onChange={(e) => this.onChange(e)}\n                                                                placeholder=\"Title for Notes Lec\"\n                                                            />\n                                                        </div>\n                                                        <div className=\"form-group col-lg-12\">\n                                                            <label>Alternative Title of the Notes Lecture's(E.g. SSC - Aptitude)</label>\n                                                            <input\n                                                                type=\"text\"\n                                                                required={true}\n                                                                className=\"form-control form-control-alternative\"\n                                                                id=\"alt_title_notes\"\n                                                                name=\"alt_title_notes\"\n                                                                value={this.state.notes.alt_title_notes}\n                                                                onChange={(e) => this.onChange(e)}\n                                                                placeholder=\"Alternative Title for Notes Lec\"\n                                                            />\n                                                        </div>\n                                                        <div className=\"form-group col-lg-12\">\n                                                            <label>Is Active?</label>\n                                                            <select className=\"form-control form-control-alternative\" name=\"is_active\" onChange={(e) => this.onChange(e)} required={true}>\n                                                                <option value={this.state.notes.is_active ? \"true\" : \"false\"}>{this.state.notes.is_active ? \"Yes\" : \"No\"}</option>\n                                                                <option value=\"true\">Yes</option>\n                                                                <option value=\"false\">No</option>\n                                                            </select>\n                                                        </div>\n                                                        <div className=\"form-group col-lg-12\">\n                                                            <lable>Will Active On(If Unactive) ({this.state.notes.active_on})</lable>\n                                                            <input\n                                                                type=\"datetime-local\"\n                                                                required={true}\n                                                                className=\"form-control form-control-alternative\"\n                                                                name=\"active_on\"\n                                                                id=\"active_on\"\n                                                                value={this.state.notes.active_on}\n                                                                onChange={(e) => this.onChange(e)}\n                                                                placeholder=\"Will be available on?\"\n                                                            />\n                                                        </div>\n\n                                                        <div className=\"form-group col-lg-12\">\n                                                            <label>Exam(To which Lectures related)</label>\n                                                            <select className=\"form-control form-control-alternative\" name=\"exam\" onChange={(e) => this.onChange(e)} required={true}>\n                                                                <option value={this.state.notes.exam_id}>{this.state.notes.exam}</option>\n                                                                {\n                                                                    this.state.all_exams.map((exam, index)=>(\n                                                                        <option value={exam.id} key={index}>{exam.exam_name}</option>\n                                                                    ))\n                                                                }\n                                                            </select>\n                                                        </div>\n                                                        <div className=\"form-group col-lg-12\">\n                                                            <label>Is Deleted?</label>\n                                                            <select className=\"form-control form-control-alternative\" name=\"is_deleted\" onChange={(e) => this.onChange(e)} required={true}>\n                                                                <option value={this.state.notes.is_deleted ? \"true\" : \"false\"}>{this.state.notes.is_deleted ? \"Yes\" : \"No\"}</option>\n                                                                <option value=\"true\">Yes</option>\n                                                                <option value=\"false\">No</option>\n                                                            </select>\n                                                        </div>\n                                                        <div className=\"form-group col-lg-12\">\n                                                            <input type=\"submit\" className=\"btn btn-primary btn-lg\" value=\"Update Now\"/>\n                                                        </div>\n                                                    </div>\n\n\n                                                </form>\n                                            </div>\n                                            {/*Form for adding Notes ends*/}\n\n\n\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n\n                        {/*Content Ends Here*/}\n\n\n                        {/*Footer*/}\n                        <Footer />\n                    </div>\n                </div>\n            </div>\n        )\n    }\n};\n\nexport default viewQuiz;"]},"metadata":{},"sourceType":"module"}