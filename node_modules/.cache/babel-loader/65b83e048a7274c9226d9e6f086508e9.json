{"ast":null,"code":"import _defineProperty from \"/Users/Jarvis/Desktop/projects/examsnu/educator/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/Jarvis/Desktop/projects/examsnu/educator/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/Jarvis/Desktop/projects/examsnu/educator/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Jarvis/Desktop/projects/examsnu/educator/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Jarvis/Desktop/projects/examsnu/educator/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Jarvis/Desktop/projects/examsnu/educator/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Jarvis/Desktop/projects/examsnu/educator/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/Jarvis/Desktop/projects/examsnu/educator/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/Jarvis/Desktop/projects/examsnu/educator/src/components/Products/Lectures/addLecture.jsx\";\nimport React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { BASE_URL } from '../../../services/BaseUrl';\nimport Footer from '../../../layouts/Footer';\nimport Sidebar from '../../../layouts/Sidebar';\nimport Navbar from '../../../layouts/Navbar';\nimport { Link } from 'react-router-dom';\nimport Loader from '../../../assets/img/loading.gif';\n\nvar addLecture =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(addLecture, _Component);\n\n  function addLecture(props) {\n    var _this;\n\n    _classCallCheck(this, addLecture);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(addLecture).call(this, props));\n\n    _this.onChange = function (e) {\n      e.preventDefault();\n\n      _this.setState({\n        lecture: _objectSpread({}, _this.state.lecture, _defineProperty({}, e.target.name, e.target.value))\n      });\n    };\n\n    _this.createVideoLec = function (e) {\n      _this.setState({\n        isLoading: true\n      });\n\n      e.preventDefault();\n      var formData = new FormData(e.target);\n      var questionDet = {};\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = formData.entries()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var entry = _step.value;\n          questionDet[entry[0]] = entry[1];\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      questionDet['topics'] = _this.state.question_topics;\n      fetch(\"\".concat(BASE_URL, \"questions/\"), {\n        method: \"POST\",\n        headers: {\n          Authorization: \"Token \".concat(sessionStorage.getItem('examsnuDashToken'))\n        },\n        body: JSON.stringify(questionDet)\n      }).then(function (response) {\n        if (!response.ok) {\n          throw new Error(response.status);\n        } else {\n          return response.json();\n        }\n      }).then(function (responseJson) {\n        _this.setState({\n          isLoading: false,\n          questionID: responseJson.id\n        });\n      }).catch(function (error) {\n        _this.setState({\n          error: true,\n          isLoading: false,\n          openModal: false,\n          message: 'Some Error Occurred'\n        });\n      });\n      return false;\n    };\n\n    _this.state = {\n      isAuthenticated: !!sessionStorage.getItem('examsnuDashToken'),\n      profile: JSON.parse(sessionStorage.getItem('examsnuDashProfile')),\n      isLoading: true,\n      error: false,\n      message: '',\n      lectureID: 'None',\n      lecture: [{\n        id: 1,\n        exam: \"Air Force Common Admission Test\",\n        exam_id: 1,\n        videos: [{\n          id: 1,\n          title: \"Maths - 1\"\n        }],\n        created_by: \"Hitesh Yadav\",\n        created_by_id: 1,\n        title: \"Video - 1\",\n        alt_title_video: \"V1\",\n        is_active: true,\n        active_on: \"2019-04-04T00:00:00+05:30\",\n        is_deleted: false\n      }],\n      question_topics: [],\n      all_exams: [{\n        id: 0,\n        exam_category: \"\",\n        subjects: [{\n          id: 0,\n          subject_name: \" \",\n          alternative_name: \" \",\n          description: \" \"\n        }],\n        exam_name: \"\",\n        alternative_name: \"\",\n        is_deleted: \"\"\n      }]\n    };\n    _this.onChange = _this.onChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.createVideoLec = _this.addNewQuestion.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(addLecture, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      document.title = \"Create Video Lecture - examsnu.in\";\n\n      if (this.state.isAuthenticated) {\n        fetch(\"\".concat(BASE_URL, \"subjects/\"), {\n          method: \"GET\",\n          headers: {\n            Authorization: \"Token \".concat(sessionStorage.getItem('examsnuDashToken'))\n          }\n        }).then(function (response) {\n          if (!response.ok) {\n            throw new Error(response.status);\n          } else {\n            return response.json();\n          }\n        }).then(function (responseJson) {\n          _this2.setState({\n            all_exams: responseJson,\n            isLoading: false\n          });\n        }).catch(function (error) {\n          _this2.setState({\n            error: true,\n            isLoading: false,\n            message: 'Some Error Occurred'\n          });\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return addLecture;\n}(Component);\n\n;\nexport default addLecture;","map":{"version":3,"sources":["/Users/Jarvis/Desktop/projects/examsnu/educator/src/components/Products/Lectures/addLecture.jsx"],"names":["React","Component","Redirect","BASE_URL","Footer","Sidebar","Navbar","Link","Loader","addLecture","props","onChange","e","preventDefault","setState","lecture","state","target","name","value","createVideoLec","isLoading","formData","FormData","questionDet","entries","entry","question_topics","fetch","method","headers","Authorization","sessionStorage","getItem","body","JSON","stringify","then","response","ok","Error","status","json","responseJson","questionID","id","catch","error","openModal","message","isAuthenticated","profile","parse","lectureID","exam","exam_id","videos","title","created_by","created_by_id","alt_title_video","is_active","active_on","is_deleted","all_exams","exam_category","subjects","subject_name","alternative_name","description","exam_name","bind","addNewQuestion","document"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {Redirect} from 'react-router-dom';\n\nimport {BASE_URL} from '../../../services/BaseUrl';\nimport Footer from '../../../layouts/Footer';\nimport Sidebar from '../../../layouts/Sidebar';\nimport Navbar from '../../../layouts/Navbar';\nimport {Link} from 'react-router-dom';\nimport Loader from '../../../assets/img/loading.gif';\n\nclass addLecture extends Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            isAuthenticated: !!sessionStorage.getItem('examsnuDashToken'),\n            profile: JSON.parse(sessionStorage.getItem('examsnuDashProfile')),\n\n            isLoading:true,\n            error:false,\n            message:'',\n            lectureID:'None',\n\n            lecture:[{id:1,exam:\"Air Force Common Admission Test\",exam_id:1,videos:[{id:1,title:\"Maths - 1\"}],created_by:\"Hitesh Yadav\",created_by_id:1,title:\"Video - 1\",alt_title_video:\"V1\",is_active:true,active_on:\"2019-04-04T00:00:00+05:30\",is_deleted:false}],\n            question_topics:[],\n\n            all_exams : [\n                { id: 0, exam_category: \"\", subjects: [{ id: 0, subject_name: \" \", alternative_name: \" \", description:\" \" },],exam_name:\"\",alternative_name:\"\",is_deleted:\"\" },\n            ],\n\n        };\n        this.onChange = this.onChange.bind(this);\n        this.createVideoLec = this.addNewQuestion.bind(this);\n    }\n\n    componentDidMount() {\n        document.title = \"Create Video Lecture - examsnu.in\";\n\n        if (this.state.isAuthenticated) {\n            fetch(`${BASE_URL}subjects/`, {\n                method: \"GET\",\n                headers: {\n                    Authorization: `Token ${sessionStorage.getItem('examsnuDashToken')}`\n                },\n            })\n                .then((response) => {\n                    if(!response.ok){\n                        throw new Error(response.status)\n                    }else{\n                        return response.json();\n                    }\n                })\n                .then((responseJson) => {\n                    this.setState({\n                        all_exams:responseJson,\n                        isLoading:false,\n                    })\n                })\n                .catch((error) => {\n                    this.setState({\n                        error:true,\n                        isLoading:false,\n                        message:'Some Error Occurred',\n                    })\n                });\n        }\n    };\n    onChange = (e) => {\n        e.preventDefault();\n\n        this.setState({\n            lecture: {\n                ...this.state.lecture, [e.target.name]: e.target.value\n            }\n        });\n    };\n    createVideoLec = (e) => {\n        this.setState({\n            isLoading:true,\n        });\n        e.preventDefault();\n\n        const formData = new FormData(e.target);\n        const questionDet = {};\n\n        for (let entry of formData.entries()) {\n            questionDet[entry[0]] = entry[1]\n        }\n        questionDet['topics'] = this.state.question_topics;\n\n        fetch(`${BASE_URL}questions/`, {\n            method: \"POST\",\n            headers: {\n                Authorization: `Token ${sessionStorage.getItem('examsnuDashToken')}`\n            },\n            body:JSON.stringify(questionDet),\n        })\n            .then((response) => {\n                if(!response.ok){\n                    throw new Error(response.status)\n                }else{\n                    return response.json();\n                }\n            })\n            .then((responseJson) => {\n                this.setState({\n                    isLoading:false,\n                    questionID:responseJson.id,\n                });\n            })\n            .catch((error) => {\n                this.setState({\n                    error:true,\n                    isLoading:false,\n                    openModal:false,\n                    message:'Some Error Occurred',\n                })\n            });\n        return false;\n    };\n\n    render(){\n        return(\n            <div></div>\n        \n        )\n    }\n};\n\nexport default addLecture;"]},"metadata":{},"sourceType":"module"}