{"ast":null,"code":"import _defineProperty from \"/Users/Jarvis/Desktop/projects/examsnu/educator/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/Jarvis/Desktop/projects/examsnu/educator/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/Jarvis/Desktop/projects/examsnu/educator/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Jarvis/Desktop/projects/examsnu/educator/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Jarvis/Desktop/projects/examsnu/educator/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Jarvis/Desktop/projects/examsnu/educator/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Jarvis/Desktop/projects/examsnu/educator/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/Jarvis/Desktop/projects/examsnu/educator/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/Jarvis/Desktop/projects/examsnu/educator/src/components/Collection/Questions/editQuestion.jsx\";\nimport React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { BASE_URL } from '../../../services/BaseUrl';\nimport Footer from '../../../layouts/Footer';\nimport Sidebar from '../../../layouts/Sidebar';\nimport Navbar from '../../../layouts/Navbar';\nimport { Link } from 'react-router-dom';\nimport Loader from '../../../assets/img/loading.gif';\n\nvar editQuestion =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(editQuestion, _Component);\n\n  function editQuestion(props) {\n    var _this;\n\n    _classCallCheck(this, editQuestion);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(editQuestion).call(this, props));\n\n    _this.onChange = function (e) {\n      e.preventDefault();\n\n      if (e.target.name === 'topics') {\n        _this.setState({\n          question_topics: [].slice.call(e.target.selectedOptions).map(function (o) {\n            return o.value;\n          })\n        });\n      } else {\n        _this.setState({\n          question: _objectSpread({}, _this.state.question, _defineProperty({}, e.target.name, e.target.value))\n        });\n      }\n    };\n\n    _this.addNewQuestion = function (e) {\n      _this.setState({\n        isLoading: true\n      });\n\n      e.preventDefault();\n      var formData = new FormData(e.target);\n      var questionDet = {};\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = formData.entries()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var entry = _step.value;\n          questionDet[entry[0]] = entry[1];\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      questionDet['topics'] = _this.state.question_topics;\n      fetch(\"\".concat(BASE_URL, \"questions/\"), {\n        method: \"POST\",\n        headers: {\n          Authorization: \"Token \".concat(sessionStorage.getItem('examsnuDashToken'))\n        },\n        body: JSON.stringify(questionDet)\n      }).then(function (response) {\n        if (!response.ok) {\n          throw new Error(response.status);\n        } else {\n          return response.json();\n        }\n      }).then(function (responseJson) {\n        _this.setState({\n          isLoading: false,\n          questionID: responseJson.id\n        });\n      }).catch(function (error) {\n        _this.setState({\n          error: true,\n          isLoading: false,\n          openModal: false,\n          message: 'Some Error Occurred'\n        });\n      });\n      return false;\n    };\n\n    _this.state = {\n      isAuthenticated: !!sessionStorage.getItem('examsnuDashToken'),\n      profile: JSON.parse(sessionStorage.getItem('examsnuDashProfile')),\n      isLoading: true,\n      error: false,\n      message: '',\n      questionID: 'None',\n      question: [{\n        id: \"\",\n        topics: [{\n          id: \"\",\n          topic_title: \"\"\n        }],\n        \"subject\": {\n          id: \"\",\n          subject_name: \"\"\n        },\n        options: [{\n          id: \"\",\n          option_title: \"\"\n        }],\n        correct_options: [{\n          id: \"\",\n          option_title: \"\"\n        }],\n        created_by: \"\",\n        created_by_id: \"\",\n        question: \"\",\n        hindi_question: \"\",\n        solution: \"\",\n        hindi_solution: \"\",\n        question_type: \"\",\n        correct_marks: \"\",\n        negative_marks: \"\",\n        is_negative_marking: \"\",\n        is_deleted: \"\"\n      }],\n      question_topics: [],\n      all_subjects: [{\n        id: 0,\n        subject_name: \" \",\n        alternative_name: \" \",\n        description: \" \",\n        is_deleted: false\n      }],\n      all_topics: [{\n        id: 0,\n        topic_title: \"\",\n        is_deleted: false\n      }]\n    };\n    _this.onChange = _this.onChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.addNewQuestion = _this.addNewQuestion.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(editQuestion, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      document.title = \"Update Question - examsnu.in\";\n\n      if (this.state.isAuthenticated) {\n        fetch(\"\".concat(BASE_URL, \"question/?id=\").concat(this.props.match.params.question_id), {\n          method: \"GET\",\n          headers: {\n            Authorization: \"Token \".concat(sessionStorage.getItem('examsnuDashToken'))\n          }\n        }).then(function (response) {\n          if (!response.ok) {\n            throw new Error(response.status);\n          } else {\n            return response.json();\n          }\n        }).then(function (responseJson) {\n          _this2.setState({\n            question: responseJson,\n            isLoading: false\n          });\n        }).catch(function (error) {\n          _this2.setState({\n            error: true,\n            isLoading: false,\n            message: 'Some Error Occurred'\n          });\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (!this.state.isAuthenticated) {\n        return React.createElement(Redirect, {\n          to: \"/login\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 135\n          },\n          __self: this\n        });\n      }\n\n      if (this.state.questionID !== 'None') {\n        return React.createElement(Redirect, {\n          to: \"/collection/question/edit/\".concat(this.state.questionID),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 138\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, React.createElement(Sidebar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"main-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, React.createElement(Navbar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"header bg-gradient-primary pb-8 pt-5 pt-md-8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container-fluid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"header-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        className: \"headline\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, \"Update Question\")), React.createElement(Link, {\n        to: \"/collection/questions\",\n        className: \"btn btn-info btn-lg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, \"Check Question Collection\"), React.createElement(Link, {\n        to: \"/collection/question/add\",\n        className: \"btn btn-warning btn-lg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, \"Add Question\"))), React.createElement(\"div\", {\n        className: \"container-fluid mt--7\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row mt-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card shadow\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card-header bg-transparent\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        className: \"mb-0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, \"Update Question\")), React.createElement(\"div\", {\n        className: \"margin\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, this.state.message && this.state.error ? React.createElement(\"div\", {\n        className: \"alert alert-danger\",\n        role: \"alert\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, this.state.message) : this.state.message && !this.state.error ? React.createElement(\"div\", {\n        className: \"alert alert-info\",\n        role: \"alert\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, this.state.message) : ''), React.createElement(\"div\", {\n        className: \"loader-justify\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: Loader,\n        className: !this.state.isLoading ? \"hideBox\" : \"loader\",\n        alt: \"Loader\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: this.state.isLoading ? \"card-body hideBox\" : \"card-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row icon-examples\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-lg-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-lg-12 box-shadow\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card shadow border-0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"mt-0 mb-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }, \"Q.)  \"), this.state.question.question), React.createElement(\"p\", {\n        className: \"mt-0 mb-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }, this.state.question.hindi_question), React.createElement(\"h3\", {\n        className: \"mt-0 mb-0 text-danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }, this.state.question.question_type)))))))))), React.createElement(Footer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return editQuestion;\n}(Component);\n\n;\nexport default editQuestion;","map":{"version":3,"sources":["/Users/Jarvis/Desktop/projects/examsnu/educator/src/components/Collection/Questions/editQuestion.jsx"],"names":["React","Component","Redirect","BASE_URL","Footer","Sidebar","Navbar","Link","Loader","editQuestion","props","onChange","e","preventDefault","target","name","setState","question_topics","slice","call","selectedOptions","map","o","value","question","state","addNewQuestion","isLoading","formData","FormData","questionDet","entries","entry","fetch","method","headers","Authorization","sessionStorage","getItem","body","JSON","stringify","then","response","ok","Error","status","json","responseJson","questionID","id","catch","error","openModal","message","isAuthenticated","profile","parse","topics","topic_title","subject_name","options","option_title","correct_options","created_by","created_by_id","hindi_question","solution","hindi_solution","question_type","correct_marks","negative_marks","is_negative_marking","is_deleted","all_subjects","alternative_name","description","all_topics","bind","document","title","match","params","question_id"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {Redirect} from 'react-router-dom';\n\nimport {BASE_URL} from '../../../services/BaseUrl';\nimport Footer from '../../../layouts/Footer';\nimport Sidebar from '../../../layouts/Sidebar';\nimport Navbar from '../../../layouts/Navbar';\nimport {Link} from 'react-router-dom';\nimport Loader from '../../../assets/img/loading.gif';\n\nclass editQuestion extends Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            isAuthenticated: !!sessionStorage.getItem('examsnuDashToken'),\n            profile: JSON.parse(sessionStorage.getItem('examsnuDashProfile')),\n\n            isLoading:true,\n            error:false,\n            message:'',\n            questionID:'None',\n\n            question:[{id:\"\",topics:[{id:\"\",topic_title:\"\"}],\"subject\":{id:\"\",subject_name:\"\"},options:[{id:\"\",option_title:\"\"}],correct_options:[{id:\"\",option_title:\"\"}],created_by:\"\",created_by_id:\"\",question:\"\",hindi_question:\"\",solution:\"\",hindi_solution:\"\",question_type:\"\",correct_marks:\"\",negative_marks:\"\",is_negative_marking:\"\",is_deleted:\"\"}],\n            question_topics:[],\n\n            all_subjects:[\n                { id: 0, subject_name: \" \", alternative_name: \" \", description:\" \",is_deleted:false, },\n            ],\n            all_topics:[\n                { id: 0, topic_title: \"\", is_deleted: false, },\n            ],\n\n        };\n\n        this.onChange = this.onChange.bind(this);\n        this.addNewQuestion = this.addNewQuestion.bind(this);\n    }\n\n    componentDidMount() {\n        document.title = \"Update Question - examsnu.in\";\n\n        if (this.state.isAuthenticated) {\n            fetch(`${BASE_URL}question/?id=${this.props.match.params.question_id}`, {\n                method: \"GET\",\n                headers: {\n                    Authorization: `Token ${sessionStorage.getItem('examsnuDashToken')}`\n                },\n            })\n                .then((response) => {\n                    if(!response.ok){\n                        throw new Error(response.status)\n                    }else{\n                        return response.json();\n                    }\n                })\n                .then((responseJson) => {\n                    this.setState({\n                        question:responseJson,\n                        isLoading:false,\n                    })\n                })\n                .catch((error) => {\n                    this.setState({\n                        error:true,\n                        isLoading:false,\n                        message:'Some Error Occurred',\n                    })\n                });\n        }\n    };\n    onChange = (e) => {\n        e.preventDefault();\n\n        if(e.target.name === 'topics'){\n            this.setState({\n                question_topics: [].slice.call(e.target.selectedOptions).map(o => {\n                    return o.value;\n                })\n            });\n        }else{\n            this.setState({\n                question: {\n                    ...this.state.question, [e.target.name]: e.target.value\n                }\n            });\n        }\n    };\n    addNewQuestion = (e) => {\n        this.setState({\n            isLoading:true,\n        });\n        e.preventDefault();\n\n        const formData = new FormData(e.target);\n        const questionDet = {};\n\n        for (let entry of formData.entries()) {\n            questionDet[entry[0]] = entry[1]\n        }\n        questionDet['topics'] = this.state.question_topics;\n\n        fetch(`${BASE_URL}questions/`, {\n            method: \"POST\",\n            headers: {\n                Authorization: `Token ${sessionStorage.getItem('examsnuDashToken')}`\n            },\n            body:JSON.stringify(questionDet),\n        })\n            .then((response) => {\n                if(!response.ok){\n                    throw new Error(response.status)\n                }else{\n                    return response.json();\n                }\n            })\n            .then((responseJson) => {\n                this.setState({\n                    isLoading:false,\n                    questionID:responseJson.id,\n                });\n            })\n            .catch((error) => {\n                this.setState({\n                    error:true,\n                    isLoading:false,\n                    openModal:false,\n                    message:'Some Error Occurred',\n                })\n            });\n        return false;\n    };\n\n    render(){\n        if(!this.state.isAuthenticated){\n            return(<Redirect to=\"/login\"/>);\n        }\n        if(this.state.questionID !== 'None'){\n            return(<Redirect to={`/collection/question/edit/${this.state.questionID}`}  />);\n        }\n        return(\n            <div>\n                <Sidebar/>\n                <div className=\"main-content\">\n                    <Navbar/>\n\n\n                    <div className=\"header bg-gradient-primary pb-8 pt-5 pt-md-8\">\n                        <div className=\"container-fluid\">\n                            <div className=\"header-body\">\n                                <h2 className=\"headline\">Update Question</h2>\n                            </div>\n                            <Link to={`/collection/questions`} className=\"btn btn-info btn-lg\">Check Question Collection</Link>\n                            <Link to={`/collection/question/add`} className=\"btn btn-warning btn-lg\">Add Question</Link>\n                        </div>\n                    </div>\n                    <div className=\"container-fluid mt--7\">\n\n                        {/*Content Starts Here*/}\n\n                        <div className=\"row mt-5\">\n                            <div className=\"col\">\n                                <div className=\"card shadow\">\n                                    <div className=\"card-header bg-transparent\">\n                                        <h3 className=\"mb-0\">Update Question</h3>\n                                    </div>\n\n                                    {/*Warning Message*/}\n                                    <div className=\"margin\">\n                                        {this.state.message && this.state.error ? (\n                                            <div className=\"alert alert-danger\" role=\"alert\">\n                                                {this.state.message}\n                                            </div>\n                                        ) : (\n                                            this.state.message && !this.state.error ? (\n                                                <div className=\"alert alert-info\" role=\"alert\">\n                                                    {this.state.message}\n                                                </div>\n                                            ) : ''\n                                        )}\n                                    </div>\n\n                                    {/*Loader*/}\n                                    <div className=\"loader-justify\">\n                                        <img\n                                            src={Loader}\n                                            className={!this.state.isLoading ? \"hideBox\" : \"loader\"}\n                                            alt=\"Loader\"\n                                        />\n                                    </div>\n\n                                    <div  className={this.state.isLoading ? \"card-body hideBox\" : \"card-body\"}>\n                                        <div className=\"row icon-examples\">\n\n                                            {/*Form for adding Video starts*/}\n                                            <div className=\"col-lg-12\">\n                                                <div className=\"col-lg-12 box-shadow\">\n                                                    <div className=\"card shadow border-0\">\n                                                        <div className=\"card-body\">\n\n                                                            <p className=\"mt-0 mb-5\"><b>Q.)  </b>{this.state.question.question}</p>\n                                                            <p className=\"mt-0 mb-5\">{this.state.question.hindi_question}</p>\n                                                            <h3 className=\"mt-0 mb-0 text-danger\">{this.state.question.question_type}</h3>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                            {/*Form for adding Video ends*/}\n\n\n\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n\n                        {/*Content Ends Here*/}\n\n\n                        {/*Footer*/}\n                        <Footer />\n                    </div>\n                </div>\n            </div>\n        )\n    }\n};\n\nexport default editQuestion;\n\n"]},"metadata":{},"sourceType":"module"}